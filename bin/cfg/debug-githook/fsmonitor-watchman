#!/bin/sh
PRE="`date` fsmonitor-watchman:"
LOG=~/githook.log
echo === $PRE $0 entered ========================= >> $LOG
echo $PRE HOSTNAME: $HOSTNAME TYPE: $MACHTYPE $HOSTTYPE $OSTYPE LOGNAME: $LOGNAME USER: $USER HOME: $HOME >> $LOG
echo $PRE DISPLAY: $DISPLAY TERM: $TERM LANG: $LANG TZ: $TZ PWD: $PWD >> $LOG
echo $PRE SHLVL: $SHLVL -: $- UID: $UID EUID: $EUID PPID: $PPID WINDOWID: $WINDOWID COL: $COLUMNS LINES: $LINES $BASH $BASH_VERSION >> $LOG
echo $PRE EDITOR: $EDITOR >> $LOG
echo $PRE PATH: $PATH >> $LOG
echo $PRE GIT_DIR: $GIT_DIR >> $LOG
echo $PRE GIT_EDITOR: $GIT_EDITOR >> $LOG
echo $PRE core.hooksPath: `git config core.hooksPath` >> $LOG
echo $PRE core.fsmonitor: `git config core.fsmonitor` >> $LOG
echo $PRE Args: $* >> $LOG
echo $PRE Arg1: $1 >> $LOG
echo $PRE Arg2: $2 >> $LOG
echo $PRE Arg3: $3 >> $LOG
echo $PRE Arg4: $4 >> $LOG
echo $PRE Arg5: $5 >> $LOG
echo $PRE Arg6: $6 >> $LOG
echo $PRE Arg7: $7 >> $LOG
echo $PRE Arg8: $8 >> $LOG
echo $PRE Arg9: $9 >> $LOG
git status >> $LOG
unset PRE
set >> $LOG
echo --------------------------------------------- >> $LOG
# https://git-scm.com/docs/githooks
#
# This hook is invoked when the configuration option core.fsmonitor is set to .git/hooks/fsmonitor-watchman. It takes two arguments, a version (currently 1) and the time in elapsed nanoseconds since midnight, January 1, 1970.
#
# The hook should output to stdout the list of all files in the working directory that may have changed since the requested time. The logic should be inclusive so that it does not miss any potential changes. The paths should be relative to the root of the working directory and be separated by a single NUL.
#
# It is OK to include files which have not actually changed. All changes including newly-created and deleted files should be included. When files are renamed, both the old and the new name should be included.
#
# Git will limit what files it checks for changes as well as which directories are checked for untracked files based on the path names given.
#
# An optimized way to tell git "all files have changed" is to return the filename /.
#
# The exit status determines whether git will use the data from the hook to limit its search. On error, it will fall back to verifying all files and folders.
echo /
