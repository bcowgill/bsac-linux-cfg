# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
#* * * * * date >> $HOME/alive.log
#* * * * * (date; uptime) >> $HOME/alive.log; sync
#0 * * * * sleep 2; df -k >> $HOME/alive.log

# convert console screenshots from ppm to png automatically
#5 * * * * $HOME/bin/convert-screenshots.sh
* * * * * mkdir -p /tmp/$LOGNAME && set > /tmp/$LOGNAME/crontab-set.log 2>&1
30 17,18 * * * $HOME/bin/backup-work.sh > /tmp/$LOGNAME/crontab-backup-work.log 2>&1
*/10 9,10,11,12,13,14,15,16,17,18 * * * $HOME/bin/wcdscan.sh > /tmp/$LOGNAME/crontab-wcdscan.log 2>&1
0 0,6,12,18 * * * $HOME/bin/moon-shot.sh > /tmp/$LOGNAME/crontab-moon-shot.log 2>&1

