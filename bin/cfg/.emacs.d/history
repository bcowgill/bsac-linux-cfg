;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(read-flycheck-checker-history command-history js--symbol-history semantic-completion-default-history search-ring input-method-history woman-topic-history coding-system-history compile-history read-expression-history bookmark-history query-replace-history file-name-history yes-or-no-p-history minibuffer-history info-lookup-history buffer-name-history extended-command-history))
(setq command-history '((switch-to-buffer ".emacs" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer ".emacs" nil 'force-same-window) (kill-buffer "*Buffer List*") (kill-buffer "*Backtrace*") (isearch-resume "epoch" nil nil t "epoch" 't) (isearch-resume "epoch-view" nil nil t "epoch-view" 't) (switch-to-buffer "*Messages*" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (isearch-resume "epoch-view" nil nil t "epoch-view" 't) (isearch-resume "popup" nil nil t "popup" 't) (isearch-resume "alist" nil nil t "alist" 't) (isearch-resume "epoch-view" nil nil t "epoch-view" 't) (switch-to-buffer "*Packages*" nil 'force-same-window) (describe-function 'flycheck-first-error) (isearch-resume "flycheck" nil nil t "flycheck" 't) (goto-line 1 nil) (flycheck-next-error nil) (execute-extended-command nil "flycheck-next-error") (flycheck-next-error nil) (execute-extended-command nil "flycheck-next-error") (flycheck-first-error nil) (execute-extended-command nil "flycheck-first-error") (flycheck-next-error nil) (execute-extended-command nil "flycheck-next-error") (flycheck-buffer) (execute-extended-command nil "flycheck-buffer") (switch-to-buffer ".emacs" nil 'force-same-window) (flycheck-verify-setup) (execute-extended-command nil "flycheck-verify-setup") (switch-to-buffer "throwInvalid.ts" nil 'force-same-window)))
(setq js--symbol-history '("say"))
(setq semantic-completion-default-history '("say"))
(setq search-ring '("epoch-view" "popup" "alist" "epoch-view" "flycheck" "typings" "-mode" "CSV" "installed" "company-php" "company" "company-" "installed" "dash" "setting" "config" "check-syste" "lib" "server" "print" "usage" "strip_" "read_file" "print" "in_a_list" "print" "sudo" "file_has_text" "hand	" "gpm" "coverage-in" "coverage-inde" "TODO" "cover_single" "append_csv" "SCRAPE" "-scrape" "MODULE" "_URL" "FILE_URL" "SCRAPE" "append_csv" "COV_DIR" "SCRAPE" "-scrape" "report" "MODULE" "ENV" "TODO" "cover_single" "append_csv" "MODULE" "module_config" "unknown" "assume_module" "UNKNOWN" "run cover" "COV_INDEX" "csv" "Covering Single" "COV_INDEX" "COV_DIR" "html" "cover_single"))
(setq woman-topic-history '("screen"))
(setq coding-system-history '("utf-8"))
(setq compile-history '("make -k etags *.el"))
(setq read-expression-history '("1" "w" "1" "wq"))
(setq bookmark-history '("jscs-test.jsx" "jscs.json5" "emacsercises.txt" "eintr" "jscs.json5" "jscs-test.jsx" "jscs.json5" "eintr" "card" "markup" "card" "markup" "emacsercises.txt" "hereiam" "movement" "markup" "card" "jscs.json5" "jscs-test.jsx" "jscs.json5" "card" "jscs.json5" "card" "markup" "card" "markup" "eintr"))
(setq query-replace-history '("package-install '" "package-install " "package-install " "" "-[0-9]+\\.[0-9]+" "-[0-9]+\\.[0-9]+" "" "-[0-9]+\\.[0-9]+\\.[0-9]+" "-[0-9]+\\.[0-9]+\\.[0-9]+" "	" "  " "  " "anObject" "aObject" "aObject" "anArray" "aArray" "aArray" "COVER_HTML" "FILE_URL" "FILE_URL" "\\\\s+ " " " " " "\\s+" " " " " "plan" "TEST_PLAN" "TEST_PLAN"))
(setq file-name-history '("/home/me/.emacs" "/home/me/workspace/play/bsac-linux-cfg/bin/cfg/emacs.pkg.el" "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-keyref.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-keyref." "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-lisp.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/clearbooks/check-code.sh" "/home/me/workspace/play/js-ts-types/package.json5" "/home/me/workspace/play/js-ts-types/tsconfig-cover.json5" "/home/me/workspace/play/js-ts-types/tsconfig-debug.json5" "/home/me/workspace/play/js-ts-types/tsconfig.json5" "/home/me/workspace/play/js-ts-types/tsfmt.json5" "/home/me/workspace/play/js-ts-types/tslint.json5" "/home/me/workspace/play/js-ts-types/src/string/shorten.ts" "/home/me/workspace/play/js-ts-types/src/string/string.test.ts" "/home/me/workspace/play/js-ts-types/src/string/string.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.ts" "/home/me/workspace/play/js-ts-types/src/string/ishorten.d.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorteners.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.test.ts" "/home/me/workspace/play/js-ts-types/src/interfaces.d.ts" "/home/me/workspace/play/js-ts-types/src/number/number.ts" "/home/me/workspace/play/js-ts-types/src/number/number.test.ts" "/home/me/workspace/play/js-ts-types/src/types.ts" "/home/me/workspace/play/js-ts-types/src/test/throwInvalid.factory.ts" "/home/me/workspace/play/js-ts-types/src/test/throwInvalid.test.ts" "/home/me/workspace/play/js-ts-types/src/throwInvalid.ts" "/home/me/workspace/play/js-ts-types/src/array/array.test.ts"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes" "y" "yes" "no" "yes" "YES" "yes" "yesy" "yes" "y" "yes" "y" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "esy"))
(setq minibuffer-history '("flycheck-first-error" "1" "color-identifiers" "auto-complete" "1" "ace-jump-mode" "package-install-from-buffer" "package-install-file" "1" "ITypeChecker" "ITypeErrorThrower" "ITypeErrorInfo" "1" "140" "133" "67" "46" "22" "11" "131" "1" "205" "177" "37" "40" "37" "28" "215" "96" "1"))
(setq buffer-name-history '(".emacs" "*shell*" ".emacs" "*Buffer List*" "*Backtrace*" "*Messages*" "*scratch*" "*Packages*" ".emacs" "throwInvalid.ts" "check-system.sh" "throwInvalid.ts" ".emacs" "*Packages*" "emacs-keyref.html" "*Packages*" "emacs.pkg.el" "emacs-keyref.html" "*Packages*" "emacs.pkg.el" ".emacs" "*Messages*" "emacs-pkg.txt" "*Packages*" ".emacs" "emacs-pkg.txt" "throwInvalid.ts" ".emacs" "emacs-tutorial.txt" "emacs-keyref."))
(setq extended-command-history '("flycheck-next-error" "flycheck-first-error" "flycheck-next-error" "flycheck-buffer" "flycheck-verify-setup" "flycheck-mode" "flycheck-disable-checker" "flycheck-verify-setup" "flycheck-mode" "epoch-view-mode" "company-web-html" "package-list-packages" "save-buffer" "package-list-packages" "color-identifiers-mode" "customize-group" "color-identifiers-mode" "ac-quick-help" "customize-group" "nyan-mode" "package-list-packages-no-fetch" "desktop-save" "server-mode" "dired" "desktop-save" "elixir-mode" "php-mode" "typescript-mode" "elixir-mode" "php-mode"))
