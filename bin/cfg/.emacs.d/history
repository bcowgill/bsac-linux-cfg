;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(command-history js--symbol-history semantic-completion-default-history search-ring input-method-history woman-topic-history coding-system-history compile-history read-expression-history bookmark-history query-replace-history file-name-history yes-or-no-p-history minibuffer-history info-lookup-history buffer-name-history extended-command-history))
(setq command-history '((isearch-resume "print" nil nil t "print" 't) (isearch-resume "usage" nil nil t "usage" 't) (goto-line 140 nil) (isearch-resume "strip_" nil nil t "strip_" 't) (goto-line 140 nil) (goto-line 133 nil) (isearch-resume "read_file" nil nil t "read_file" 't) (goto-line 67 nil) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "*shell*" nil 'force-same-window) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (switch-to-buffer "tests.sh<3>" nil 'force-same-window) (switch-to-buffer "fix-commas.pl" nil 'force-same-window) (isearch-resume "print" nil nil t "print" 't) (isearch-resume "in_a_list" nil nil t "in_a_list" 't) (isearch-resume "print" nil nil t "print" 't) (goto-line 46 nil) (goto-line 22 nil) (goto-line 11 nil) (goto-line 131 nil) (switch-to-buffer "boolean.test.ts" nil 'force-same-window) (switch-to-buffer "number.test.ts" nil 'force-same-window) (switch-to-buffer "string.test.ts" nil 'force-same-window)))
(setq js--symbol-history '("say"))
(setq semantic-completion-default-history '("say"))
(setq search-ring '("print" "usage" "strip_" "read_file" "print" "in_a_list" "print" "sudo" "file_has_text" "hand	" "gpm" "coverage-in" "coverage-inde" "TODO" "cover_single" "append_csv" "SCRAPE" "-scrape" "MODULE" "_URL" "FILE_URL" "SCRAPE" "append_csv" "COV_DIR" "SCRAPE" "-scrape" "report" "MODULE" "ENV" "TODO" "cover_single" "append_csv" "MODULE" "module_config" "unknown" "assume_module" "UNKNOWN" "run cover" "COV_INDEX" "csv" "Covering Single" "COV_INDEX" "COV_DIR" "html" "cover_single" "append_csv" "csv" "$0" "/a" "/h1" "boolean.ts" "stats" "worst" "fl pad1y" "fl padly" "boolean.ts" "data-value" "npm run" "OV_HTML" "COV_HTML" "cover_single" "Covering Singl" "Coverage " "cover_singl"))
(setq woman-topic-history '("screen"))
(setq coding-system-history '("utf-8"))
(setq compile-history '("make -k etags *.el"))
(setq read-expression-history '("1" "w" "1" "wq"))
(setq bookmark-history '("jscs-test.jsx" "jscs.json5" "emacsercises.txt" "eintr" "jscs.json5" "jscs-test.jsx" "jscs.json5" "eintr" "card" "markup" "card" "markup" "emacsercises.txt" "hereiam" "movement" "markup" "card" "jscs.json5" "jscs-test.jsx" "jscs.json5" "card" "jscs.json5" "card" "markup" "card" "markup" "eintr"))
(setq query-replace-history '("anObject" "aObject" "aObject" "anArray" "aArray" "aArray" "COVER_HTML" "FILE_URL" "FILE_URL" "\\\\s+ " " " " " "\\s+" " " " " "plan" "TEST_PLAN" "TEST_PLAN" "module" "MODULE" "MODULE" "\"" "'" "'" "test:single" "test1" "test1" "\"" "'" "'"))
(setq file-name-history '("/home/me/workspace/play/bsac-linux-cfg/bin/tests/fix-commas/tests.sh" "/home/me/workspace/play/bsac-linux-cfg/bin/tests/fix-commas/in/commas-leading.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/fix-commas.pl" "/home/me/workspace/play/js-ts-types/src/object/object.test.ts" "/home/me/workspace/play/js-ts-types/src/object/object.ts" "/home/me/workspace/play/js-ts-types/src/array/array.test.ts" "/home/me/workspace/play/js-ts-types/src/array/array.ts" "/home/me/workspace/play/js-ts-types/src/string/string.test.ts" "/home/me/workspace/play/js-ts-types/src/string/string.ts" "/home/me/workspace/play/js-ts-types/src/number/number.ts" "/home/me/workspace/play/js-ts-types/src/number/number.test.ts" "/home/me/workspace/play/js-ts-types/scripts/coverage-index.html" "/home/me/workspace/play/js-ts-types/scripts/coverone-output.pl" "/home/me/workspace/play/js-ts-types/scripts/coverone-scrape.pl" "/home/me/workspace/play/js-ts-types/coverage/lcov-report/src/boolean/index.html" "/home/me/workspace/play/js-ts-types/coverage/lcov-report/src/boolean/boolean.ts.html" "/home/me/workspace/play/js-ts-types/scripts/coverone.sh" "/home/me/workspace/play/js-ts-types/tsconfig-cover.json5" "/home/me/workspace/play/js-ts-types/tslint.json5" "/home/me/workspace/play/js-ts-types/scripts/npmtest.sh" "/home/me/workspace/play/js-ts-types/package.json5" "/home/me/workspace/play/bsac-linux-cfg/bin/template/cfgrec/alm-keyref.txt" "/home/me/workspace/play/js-ts-types/src/string/shorteners.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.ts" "/home/me/workspace/play/js-ts-types/src/test/throwInvalid.test.ts"))
(setq yes-or-no-p-history '("yes" "y" "yes" "no" "yes" "YES" "yes" "yesy" "yes" "y" "yes" "y" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "esy" "yes" "esy" "yes" "no" "yes" "ye"))
(setq minibuffer-history '("140" "133" "67" "46" "22" "11" "131" "1" "205" "177" "37" "40" "37" "28" "215" "96" "1" "dash" "tide" "flycheck" "tide" "18" "144" "142" "135" "130" "111" "61" "34" "268"))
(setq buffer-name-history '("tests.sh<3>" "*shell*" "fix-commas.pl" "*shell*" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "boolean.test.ts" "number.test.ts" "string.test.ts" "array.test.ts" "object.test.ts" "object.ts" "shorten-middle.test.ts" "shorten-left.ts" "shorten-middle.ts" "string.ts" "shorten-left.test.ts" "number.ts" "types.js" "check-system.sh" "lib-check-system.sh" "*shell*" "*Buffer List*" "check-system.sh"))
(setq extended-command-history '("revert-buffer" "package-install" "package-list-packages" "eval-region" "package-install" "package-refresh-contents" "package-install" "eval-region" "package-install" "revert-buffer" "split-window-below" "package-install" "revert-buffer" "package-install" "package-refresh-contents" "package-install" "revert-buffer" "downcase-word" "company-complete-common-or-previous-cycle" "company-complete-common-or-cycle" "company-complete" "company-complete-mouse" "company-complete" "customize-variable" "company-mode" "global-company-mode" "company-mode" "list-packages" "package-install" "capitalize-region"))
