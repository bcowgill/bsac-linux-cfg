;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(read-flycheck-checker-history command-history js--symbol-history semantic-completion-default-history search-ring input-method-history woman-topic-history coding-system-history compile-history read-expression-history bookmark-history query-replace-history file-name-history yes-or-no-p-history minibuffer-history info-lookup-history buffer-name-history extended-command-history))
(setq command-history '((switch-to-buffer "*scratch*" nil 'force-same-window) (switch-to-buffer "emacs.pkg.el" nil 'force-same-window) (switch-to-buffer ".emacs" nil 'force-same-window) (switch-to-buffer "*Messages*" nil 'force-same-window) (isearch-resume "package" nil nil t "package" 't) (switch-to-buffer ".emacs" nil 'force-same-window) (isearch-resume "bind-key" nil nil t "bind-key" 't) (switch-to-buffer ".emacs" nil 'force-same-window) (isearch-resume "editorconfig" nil nil t "editorconfig" 't) (switch-to-buffer ".emacs" nil 'force-same-window) (isearch-resume "use-package" nil nil t "use-package" 't) (isearch-resume "ss" nil nil t "ss" 't) (switch-to-buffer ".emacs" nil 'force-same-window) (switch-to-buffer "emacs.pkg.el" nil 'force-same-window) (switch-to-buffer ".emacs" nil 'force-same-window) (isearch-resume "use-package" nil nil t "use-package" 't) (package-list-packages-no-fetch) (execute-extended-command nil "package-list-packages-no-fetch") (isearch-resume "flycheck" nil nil t "flycheck" 't) (switch-to-buffer ".emacs" nil 'force-same-window) (flycheck-manual) (execute-extended-command nil "flycheck-manual") (epl-refresh) (execute-extended-command nil "epl-refresh") (switch-to-buffer "*Packages*" nil 'force-same-window) (switch-to-buffer "emacs.pkg.el" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (isearch-resume "installed" nil nil t "installed" 't) (package-list-packages-no-fetch) (execute-extended-command nil "package-list-packages-no-fetch") (switch-to-buffer "emacs.pkg.el" nil 'force-same-window)))
(setq js--symbol-history '("say"))
(setq semantic-completion-default-history '("say"))
(setq search-ring '("package" "bind-key" "editorconfig" "use-package" "flycheck" "installed" "font" "unicode" "font" "installed" "company" "installed" "company" "color-identifiers" "epoch" "nyan" "setup-tide" "interactive" "epoch-view" "popup" "alist" "epoch-view" "flycheck" "typings" "-mode" "CSV" "installed" "company-php" "company" "company-" "installed" "dash" "setting" "config" "check-syste" "lib" "server" "print" "usage" "strip_" "read_file" "print" "in_a_list" "print" "sudo" "file_has_text" "hand	" "gpm" "coverage-in" "coverage-inde" "TODO" "cover_single" "append_csv" "SCRAPE" "-scrape" "MODULE" "_URL" "FILE_URL" "SCRAPE" "append_csv" "COV_DIR" "SCRAPE" "-scrape" "report"))
(setq woman-topic-history '("screen"))
(setq coding-system-history '("utf-8"))
(setq compile-history '("make -k etags *.el"))
(setq read-expression-history '("1" "w" "1" "wq"))
(setq bookmark-history '("jscs-test.jsx" "jscs.json5" "emacsercises.txt" "eintr" "jscs.json5" "jscs-test.jsx" "jscs.json5" "eintr" "card" "markup" "card" "markup" "emacsercises.txt" "hereiam" "movement" "markup" "card" "jscs.json5" "jscs-test.jsx" "jscs.json5" "card" "jscs.json5" "card" "markup" "card" "markup" "eintr"))
(setq query-replace-history '("woman" "y" "y" "woman" "woman" "man" "x" "x" "woman" "y" "y" "man" "x" "x" "package-install '" "package-install " "package-install " "" "-[0-9]+\\.[0-9]+" "-[0-9]+\\.[0-9]+" "" "-[0-9]+\\.[0-9]+\\.[0-9]+" "-[0-9]+\\.[0-9]+\\.[0-9]+" "	" "  " "  " "anObject" "aObject" "aObject" "anArray"))
(setq file-name-history '("/home/me/.emacs" "/home/me/workspace/play/bsac-linux-cfg/bin/cfg/emacs.pkg.el" "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-keyref.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-keyref." "/home/me/workspace/play/bsac-linux-cfg/bin/template/emacs/emacs-lisp.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/clearbooks/check-code.sh" "/home/me/workspace/play/js-ts-types/package.json5" "/home/me/workspace/play/js-ts-types/tsconfig-cover.json5" "/home/me/workspace/play/js-ts-types/tsconfig-debug.json5" "/home/me/workspace/play/js-ts-types/tsconfig.json5" "/home/me/workspace/play/js-ts-types/tsfmt.json5" "/home/me/workspace/play/js-ts-types/tslint.json5" "/home/me/workspace/play/js-ts-types/src/string/shorten.ts" "/home/me/workspace/play/js-ts-types/src/string/string.test.ts" "/home/me/workspace/play/js-ts-types/src/string/string.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.ts" "/home/me/workspace/play/js-ts-types/src/string/ishorten.d.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorteners.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.test.ts" "/home/me/workspace/play/js-ts-types/src/interfaces.d.ts" "/home/me/workspace/play/js-ts-types/src/number/number.ts" "/home/me/workspace/play/js-ts-types/src/number/number.test.ts" "/home/me/workspace/play/js-ts-types/src/types.ts" "/home/me/workspace/play/js-ts-types/src/test/throwInvalid.factory.ts" "/home/me/workspace/play/js-ts-types/src/test/throwInvalid.test.ts" "/home/me/workspace/play/js-ts-types/src/throwInvalid.ts" "/home/me/workspace/play/js-ts-types/src/array/array.test.ts"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes" "y" "yes" "no" "yes" "YES" "yes" "yesy" "yes" "y" "yes" "y" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "esy"))
(setq minibuffer-history '("custom" "1" "company-complete" "company-grab" "1" "flycheck-first-error" "1" "color-identifiers" "auto-complete" "1" "ace-jump-mode" "package-install-from-buffer" "package-install-file" "1" "ITypeChecker" "ITypeErrorThrower" "ITypeErrorInfo" "1" "140" "133" "67" "46" "22" "11" "131" "1" "205" "177" "37" "40"))
(setq buffer-name-history '("*scratch*" "emacs.pkg.el" ".emacs" "*Messages*" ".emacs" "emacs.pkg.el" ".emacs" "*Packages*" "emacs.pkg.el" "*scratch*" "emacs.pkg.el" ".emacs" "check-system.sh" "*scratch*" "*Messages*" "emacs.pkg.el" ".emacs" "*Packages*" "emacs.pkg.el" "*Help*" ".emacs" "emacs.pkg.el" "*scratch*" ".emacs" "*Messages*" ".emacs" "emacs.pkg.el" "*scratch*" ".emacs" "*shell*"))
(setq extended-command-history '("package-list-packages-no-fetch" "flycheck-manual" "epl-refresh" "package-list-packages-no-fetch" "package-list-packages" "tide-mode" "tide-restart-server" "global-company-mode" "package-list-packages" "color-identifiers-mode" "setup-tide-mode" "flycheck-next-error" "flycheck-first-error" "flycheck-next-error" "flycheck-buffer" "flycheck-verify-setup" "flycheck-mode" "flycheck-disable-checker" "flycheck-verify-setup" "flycheck-mode" "epoch-view-mode" "company-web-html" "package-list-packages" "save-buffer" "package-list-packages" "color-identifiers-mode" "customize-group" "color-identifiers-mode" "ac-quick-help" "customize-group"))
