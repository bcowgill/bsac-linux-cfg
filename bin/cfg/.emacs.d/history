;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(command-history js--symbol-history semantic-completion-default-history search-ring input-method-history woman-topic-history coding-system-history compile-history read-expression-history bookmark-history query-replace-history file-name-history yes-or-no-p-history minibuffer-history info-lookup-history buffer-name-history extended-command-history))
(setq command-history '((package-list-packages nil) (execute-extended-command nil "package-list-packages") (typescript-mode) (execute-extended-command nil "typescript-mode") (shell-script-mode) (execute-extended-command nil "shell-script-mode") (shell-script-mode) (execute-extended-command nil "shell-script-mode") (shell-mode) (execute-extended-command nil "shell-mode") (dockerfile-mode) (execute-extended-command nil "dockerfile-mode") (isearch-resume "docker" nil nil t "docker" 't) (package-list-packages nil) (execute-extended-command nil "package-list-packages") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode") (elixir-mode) (execute-extended-command nil "elixir-mode")))
(setq js--symbol-history '("say"))
(setq semantic-completion-default-history '("say"))
(setq search-ring '("docker" "elixir" "php" "typescript" "company" "print" "usage" "strip_" "read_file" "print" "in_a_list" "print" "sudo" "file_has_text" "hand	" "gpm" "coverage-in" "coverage-inde" "TODO" "cover_single" "append_csv" "SCRAPE" "-scrape" "MODULE" "_URL" "FILE_URL" "SCRAPE" "append_csv" "COV_DIR" "SCRAPE" "-scrape" "report" "MODULE" "ENV" "TODO" "cover_single" "append_csv" "MODULE" "module_config" "unknown" "assume_module" "UNKNOWN" "run cover" "COV_INDEX" "csv" "Covering Single" "COV_INDEX" "COV_DIR" "html" "cover_single" "append_csv" "csv" "$0" "/a" "/h1" "boolean.ts" "stats" "worst" "fl pad1y" "fl padly" "boolean.ts" "data-value" "npm run" "OV_HTML"))
(setq woman-topic-history '("screen"))
(setq coding-system-history '("utf-8"))
(setq compile-history '("make -k etags *.el"))
(setq read-expression-history '("1" "w" "1" "wq"))
(setq bookmark-history '("jscs-test.jsx" "jscs.json5" "emacsercises.txt" "eintr" "jscs.json5" "jscs-test.jsx" "jscs.json5" "eintr" "card" "markup" "card" "markup" "emacsercises.txt" "hereiam" "movement" "markup" "card" "jscs.json5" "jscs-test.jsx" "jscs.json5" "card" "jscs.json5" "card" "markup" "card" "markup" "eintr"))
(setq query-replace-history '("anObject" "aObject" "aObject" "anArray" "aArray" "aArray" "COVER_HTML" "FILE_URL" "FILE_URL" "\\\\s+ " " " " " "\\s+" " " " " "plan" "TEST_PLAN" "TEST_PLAN" "module" "MODULE" "MODULE" "\"" "'" "'" "test:single" "test1" "test1" "\"" "'" "'"))
(setq file-name-history '("/home/me/workspace/play/js-ts-types/src/string/shorten-middle.ts" "/home/me/workspace/play/bsac-linux-cfg/bin/tests/fix-commas/tests.sh" "/home/me/workspace/play/bsac-linux-cfg/bin/tests/fix-commas/in/commas-leading.txt" "/home/me/workspace/play/bsac-linux-cfg/bin/fix-commas.pl" "/home/me/workspace/play/js-ts-types/src/object/object.test.ts" "/home/me/workspace/play/js-ts-types/src/object/object.ts" "/home/me/workspace/play/js-ts-types/src/array/array.test.ts" "/home/me/workspace/play/js-ts-types/src/array/array.ts" "/home/me/workspace/play/js-ts-types/src/string/string.test.ts" "/home/me/workspace/play/js-ts-types/src/string/string.ts" "/home/me/workspace/play/js-ts-types/src/number/number.ts" "/home/me/workspace/play/js-ts-types/src/number/number.test.ts" "/home/me/workspace/play/js-ts-types/scripts/coverage-index.html" "/home/me/workspace/play/js-ts-types/scripts/coverone-output.pl" "/home/me/workspace/play/js-ts-types/scripts/coverone-scrape.pl" "/home/me/workspace/play/js-ts-types/coverage/lcov-report/src/boolean/index.html" "/home/me/workspace/play/js-ts-types/coverage/lcov-report/src/boolean/boolean.ts.html" "/home/me/workspace/play/js-ts-types/scripts/coverone.sh" "/home/me/workspace/play/js-ts-types/tsconfig-cover.json5" "/home/me/workspace/play/js-ts-types/tslint.json5" "/home/me/workspace/play/js-ts-types/scripts/npmtest.sh" "/home/me/workspace/play/js-ts-types/package.json5" "/home/me/workspace/play/bsac-linux-cfg/bin/template/cfgrec/alm-keyref.txt" "/home/me/workspace/play/js-ts-types/src/string/shorteners.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-left.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.test.ts" "/home/me/workspace/play/js-ts-types/src/string/shorten-middle.ts"))
(setq yes-or-no-p-history '("yes" "no" "yes" "y" "yes" "no" "yes" "YES" "yes" "yesy" "yes" "y" "yes" "y" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "yse" "yes" "esy" "yes" "esy" "yes" "no"))
(setq minibuffer-history '("140" "133" "67" "46" "22" "11" "131" "1" "205" "177" "37" "40" "37" "28" "215" "96" "1" "dash" "tide" "flycheck" "tide" "18" "144" "142" "135" "130" "111" "61" "34" "268"))
(setq buffer-name-history '("*Packages*" "package.json5<2>" "shorten-left.ts" "*shell*" "number.ts" "shorten-left.ts" "*tide-references*" "*js-ts-types-70d0bf247c-errors*" "shorten-middle.test.ts" "*Packages*" "fix-commas.pl" "tests.sh<3>" "*shell*" "fix-commas.pl" "*shell*" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "tests.sh<3>" "fix-commas.pl" "boolean.test.ts" "number.test.ts" "string.test.ts" "array.test.ts" "object.test.ts" "object.ts" "shorten-middle.test.ts"))
(setq extended-command-history '("package-list-packages" "typescript-mode" "shell-script-mode" "shell-mode" "dockerfile-mode" "package-list-packages" "elixir-mode" "package-list-packages" "json-mode" "php-mode" "package-list-packages" "package-menu-mode" "typescript-mode" "tide-project-errors" "tide-references" "tide-mode" "package-menu-mode" "package-list-packages" "revert-buffer" "package-install" "package-list-packages" "eval-region" "package-install" "package-refresh-contents" "package-install" "eval-region" "package-install" "revert-buffer" "split-window-below" "package-install"))
