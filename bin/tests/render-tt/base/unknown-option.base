Unknown option: unknown-option
usage:
    render-tt.pl [options] [@options-file ...] [file ...]

            Options:
                    --page-vars=file            set the page VARIABLEs by reading in a perl hash object from file.
                    --page-consts=file          set the page CONSTANTs by reading in a perl hash object from file.
                    --var=key=val               multiple. define a simple VARIABLE for the template
                    --const=key=val             multiple. define a CONSTANT for the template
                    --constants-namespace=name  set the CONSTANTS_NAMESPACE for the template
                    --include-path              add a directory to the INCLUDE_PATH for Template::Toolkit
                    --absolute                  turn on the ABSOLUTE option for Template::Toolkit
                    --include-path              add a directory to the INCLUDE_PATH for Template::Toolkit
                    --relative                  turn on the RELATIVE option for Template::Toolkit
                    --anycase                   turn on the ANYCASE option for Template::Toolkit
                    --interpolate               turn on the INTERPOLATE option for Template::Toolkit (default)
                    --pre-chomp                 set the PRE_CHOMP option for Template::Toolkit (0 to 3 allowed)
                    --post-chomp                set the POST_CHOMP option for Template::Toolkit (0 to 3 allowed)
                    --version                   display program version
                    --help -?                   brief help message
                    --man                       full help message

Options:
    --page-vars=file.vars or --variables=file.vars or --pre-define=file.vars
                    Specifies a file to read in to set all the template page VARIABLEs in one go. These can be overridden by individual --var settings later. The file read in should be the output of Data::Dumper.

    --page-consts=file.vars or --constants=file.vars
                    Specifies a file to read in to set all the template page CONSTANTs in one go. These can be overridden by individual --constant settings later. The file read in should be the output of Data::Dumper.

    --var="key=value"
                    Defines a simple page VARIABLE for use when doing template substitutions.
                    You can specify this multiple times to define many VARIABLEs.
                    Key can be this.that to define a hash object called this with a key of that.

    --const="key=value"
                    Defines a simple page CONSTANT for use when doing template substitutions.
                    You can specify this multiple times to define many CONSTANTs.
                    Key can be this.that to define a hash object called this with a key of that.

    --constants-namespace="name"
                    Sets the Template::Toolkit CONSTANTS_NAMESPACE. Default is 'constants'.

    --include-path
                    Add a directory to the Template::Toolkit INCLUDE_PATH option so that processing of templates will look for any included templates there.

    --absolute or --noabsolute
                    Turns on the Template::Toolkit ABSOLUTE option so that processing of absolute path names is allowed.

    --relative or --norelative
                    Turns on the Template::Toolkit RELATIVE option so that processing of relative path names is allowed.

    --anycase or --noanycase
                    Turns on the Template::Toolkit ANYCASE option so that directive names are not case sensitive.

    --interpolate or --nointerpolate
                    Turns on the Template::Toolkit INTERPOLATE option so that direct substitution of $vars can happen. On by default.

    --pre-chomp=N
                    Sets the Template::Toolkit PRE_CHOMP option to control how newlines and whitespace are chomped before a template marker.
                    See L<http://tt2.org/docs/manual/Config.html#section_PRE_CHOMP_POST_CHOMP> for details.
                    [%+ +%] disable chomp
                    [%- -%] CHOMP_ONE = whitespace and one newline
                    [%= =%] CHOMP_COLLAPSE = all whitespace and newlines
                    [%~ ~%] CHOMP_GREEDY = all whitespace to a single space

                    Examples:

                    <span class="[% active -%] content">  removes spaces if active is empty otherwise lets space remain

    --post-chomp=N
                    Sets the Template::Toolkit POST_CHOMP option to control how newlines and whitespace are chomped after a template marker.

    --version
                    Prints the program version and exit.

    --help or -?
                    Print a brief help message and exit.

    --man
                    Print the full help message and exit.

