Script started on Thu Mar 13 11:19:57 2025
The operation couldnâ€™t be completed. Unable to locate a Java Runtime.
Please visit http://www.java.com for information on installing Java.


The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.

deno 1.40.3
$ deno run --allo 
w-read detect.ts
TRACE: isBun:false isDeno:true isTsx:false isNode:false isBrowser:false
dumpable global object [object Window] {
  Deno: {
    internal: Symbol(Deno.internal),
    resources: [Function: resources],
    close: [Function: close],
    metrics: [Function: metrics],
    Process: [class Process],
    run: [Function: run],
    isatty: [Function: isatty],
    writeFileSync: [Function: writeFileSync],
    writeFile: [AsyncFunction: writeFile],
    writeTextFileSync: [Function: writeTextFileSync],
    writeTextFile: [Function: writeTextFile],
    readTextFile: [AsyncFunction: readTextFile],
    readTextFileSync: [Function: readTextFileSync],
    readFile: [AsyncFunction: readFile],
    readFileSync: [Function: readFileSync],
    watchFs: [Function: watchFs],
    chmodSync: [Function: chmodSync],
    chmod: [AsyncFunction: chmod],
    chown: [AsyncFunction: chown],
    chownSync: [Function: chownSync],
    copyFileSync: [Function: copyFileSync],
    cwd: [Function: cwd],
    makeTempDirSync: [Function: makeTempDirSync],
    makeTempDir: [Function: makeTempDir],
    makeTempFileSync: [Function: makeTempFileSync],
    makeTempFile: [Function: makeTempFile],
    memoryUsage: [Function: memoryUsage],
    mkdirSync: [Function: mkdirSync],
    mkdir: [AsyncFunction: mkdir],
    chdir: [Function: chdir],
    copyFile: [AsyncFunction: copyFile],
    readDirSync: [Function: readDirSync],
    readDir: [Function: readDir],
    readLinkSync: [Function: readLinkSync],
    readLink: [Function: readLink],
    realPathSync: [Function: realPathSync],
    realPath: [Function: realPath],
    removeSync: [Function: removeSync],
    remove: [AsyncFunction: remove],
    renameSync: [Function: renameSync],
    rename: [AsyncFunction: rename],
    version: { deno: "1.40.3", v8: "12.1.285.6", typescript: "5.3.3" },
    build: {
      target: "x86_64-apple-darwin",
      arch: "x86_64",
      os: "darwin",
      vendor: "apple",
      env: undefined
    },
    statSync: [Function: statSync],
    lstatSync: [Function: lstatSync],
    stat: [AsyncFunction: stat],
    lstat: [AsyncFunction: lstat],
    truncateSync: [Function: truncateSync],
    truncate: [AsyncFunction: truncate],
    ftruncateSync: [Function: ftruncateSync],
    ftruncate: [Function: ftruncate],
    futime: [AsyncFunction: futime],
    futimeSync: [Function: futimeSync],
    errors: {
      NotFound: [class NotFound extends Error],
      PermissionDenied: [class PermissionDenied extends Error],
      ConnectionRefused: [class ConnectionRefused extends Error],
      ConnectionReset: [class ConnectionReset extends Error],
      ConnectionAborted: [class ConnectionAborted extends Error],
      NotConnected: [class NotConnected extends Error],
      AddrInUse: [class AddrInUse extends Error],
      AddrNotAvailable: [class AddrNotAvailable extends Error],
      BrokenPipe: [class BrokenPipe extends Error],
      AlreadyExists: [class AlreadyExists extends Error],
      InvalidData: [class InvalidData extends Error],
      TimedOut: [class TimedOut extends Error],
      Interrupted: [class Interrupted extends Error],
      WriteZero: [class WriteZero extends Error],
      WouldBlock: [class WouldBlock extends Error],
      UnexpectedEof: [class UnexpectedEof extends Error],
      BadResource: [class BadResource extends Error],
      Http: [class Http extends Error],
      Busy: [class Busy extends Error],
      NotSupported: [class NotSupported extends Error],
      FilesystemLoop: [class FilesystemLoop extends Error],
      IsADirectory: [class IsADirectory extends Error],
      NetworkUnreachable: [class NetworkUnreachable extends Error],
      NotADirectory: [class NotADirectory extends Error]
    },
    inspect: [Function: inspect],
    env: {
      get: [Function: getEnv],
      toObject: [Function: toObject],
      set: [Function: setEnv],
      has: [Function: has],
      delete: [Function: deleteEnv]
    },
    exit: [Function: exit],
    execPath: [Function: execPath],
    Buffer: [class Buffer],
    readAll: [AsyncFunction: readAll],
    readAllSync: [Function: readAllSync],
    writeAll: [AsyncFunction: writeAll],
    writeAllSync: [Function: writeAllSync],
    copy: [AsyncFunction: copy],
    iter: [AsyncGeneratorFunction: iter],
    iterSync: [GeneratorFunction: iterSync],
    SeekMode: {
      "0": "Start",
      "1": "Current",
      "2": "End",
      Start: 0,
      Current: 1,
      End: 2
    },
    read: [Function: read],
    readSync: [Function: readSync],
    write: [Function: write],
    writeSync: [Function: writeSync],
    File: [class FsFile],
    FsFile: [class FsFile],
    open: [AsyncFunction: open],
    openSync: [Function: openSync],
    create: [Function: create],
    createSync: [Function: createSync],
    stdin: Stdin {},
    stdout: Stdout {},
    stderr: Stderr {},
    seek: [Function: seek],
    seekSync: [Function: seekSync],
    connect: [AsyncFunction: connect],
    listen: [Function: listen],
    loadavg: [Function: loadavg],
    connectTls: [AsyncFunction: connectTls],
    listenTls: [Function: listenTls],
    startTls: [AsyncFunction: startTls],
    shutdown: [Function: shutdown],
    fstatSync: [Function: fstatSync],
    fstat: [Function: fstat],
    fsyncSync: [Function: fsyncSync],
    fsync: [AsyncFunction: fsync],
    fdatasyncSync: [Function: fdatasyncSync],
    fdatasync: [AsyncFunction: fdatasync],
    symlink: [AsyncFunction: symlink],
    symlinkSync: [Function: symlinkSync],
    link: [AsyncFunction: link],
    linkSync: [Function: linkSync],
    permissions: Permissions {},
    Permissions: [class Permissions],
    PermissionStatus: [class PermissionStatus extends EventTarget],
    serveHttp: [Function: serveHttp],
    serve: [Function: serve],
    resolveDns: [AsyncFunction: resolveDns],
    upgradeWebSocket: [Function: upgradeWebSocket],
    utime: [AsyncFunction: utime],
    utimeSync: [Function: utimeSync],
    kill: [Function: kill],
    addSignalListener: [Function: addSignalListener],
    removeSignalListener: [Function: removeSignalListener],
    refTimer: [Function: refTimer],
    unrefTimer: [Function: unrefTimer],
    osRelease: [Function: osRelease],
    osUptime: [Function: osUptime],
    hostname: [Function: hostname],
    systemMemoryInfo: [Function: systemMemoryInfo],
    networkInterfaces: [Function: networkInterfaces],
    consoleSize: [Function: consoleSize],
    gid: [Function: gid],
    uid: [Function: uid],
    Command: [class Command],
    ChildProcess: [class ChildProcess],
    test: [Function: test],
    bench: [Function: bench],
    pid: [Getter/Setter],
    ppid: [Getter/Setter],
    noColor: [Getter/Setter],
    args: [Getter/Setter],
    mainModule: [Getter/Setter],
    [Symbol(Deno.internal)]: {
      Console: [class Console],
      cssToAnsi: [Function: cssToAnsi],
      inspectArgs: [Function: inspectArgs],
      parseCss: [Function: parseCss],
      parseCssColor: [Function: parseCssColor],
      pathFromURL: [Function: pathFromURL],
      resourceForReadableStream: [Function: resourceForReadableStream],
      getPipeFd: [Function (anonymous)],
      __setupChildProcessIpcChannel: [Function: setupChildProcessIpcChannel],
      addTrailers: [Function: addTrailers],
      upgradeHttpRaw: [Function: upgradeHttpRaw],
      serveHttpOnListener: [Function: serveHttpOnListener],
      serveHttpOnConnection: [Function: serveHttpOnConnection],
      buildCaseInsensitiveCommaValueFinder: [Function: buildCaseInsensitiveCommaValueFinder],
      formatToCronSchedule: [Function: formatToCronSchedule],
      parseScheduleToString: [Function: parseScheduleToString],
      __initWorkerThreads: [Function (anonymous)],
      node: {
        initialize: [Function: initialize],
        loadCjsModule: [Function: loadCjsModule]
      },
      core: {
        ops: {
          op_close: [Function: op_close],
          op_try_close: [Function: op_try_close],
          op_void_sync: [Function: op_void_sync],
          op_error_async: [Function: op_error_async],
          op_error_async_deferred: [Function: op_error_async_deferred],
          op_void_async: [Function: op_void_async],
          op_add: [Function: op_add],
          op_add_async: [Function: op_add_async],
          op_read: [Function: op_read],
          op_read_all: [Function: op_read_all],
          op_write: [Function: op_write],
          op_read_sync: [Function: op_read_sync],
          op_write_sync: [Function: op_write_sync],
          op_write_all: [Function: op_write_all],
          op_write_type_error: [Function: op_write_type_error],
          op_shutdown: [Function: op_shutdown],
          op_format_file_name: [Function: op_format_file_name],
          op_apply_source_map: [Function: op_apply_source_map],
          op_apply_source_map_filename: [Function: op_apply_source_map_filename],
          op_set_format_exception_callback: [Function: op_set_format_exception_callback],
          op_encode_binary_string: [Function: op_encode_binary_string],
          op_image_process: [Function: op_image_process],
          op_image_decode_png: [Function: op_image_decode_png],
          op_ws_send_pong: [Function: op_ws_send_pong],
          op_broadcast_unsubscribe: [Function: op_broadcast_unsubscribe],
          op_ffi_load: [Function: op_ffi_load],
          op_ffi_get_static: [Function: op_ffi_get_static],
          op_ffi_call_nonblocking: [Function: op_ffi_call_nonblocking],
          op_ffi_call_ptr: [Function: op_ffi_call_ptr],
          op_ffi_call_ptr_nonblocking: [Function: op_ffi_call_ptr_nonblocking],
          op_ffi_ptr_create: [Function: op_ffi_ptr_create],
          op_ffi_ptr_equals: [Function: op_ffi_ptr_equals],
          op_ffi_ptr_of: [Function: op_ffi_ptr_of],
          op_ffi_ptr_of_exact: [Function: op_ffi_ptr_of_exact],
          op_ffi_ptr_offset: [Function: op_ffi_ptr_offset],
          op_ffi_ptr_value: [Function: op_ffi_ptr_value],
          op_ffi_get_buf: [Function: op_ffi_get_buf],
          op_ffi_buf_copy_into: [Function: op_ffi_buf_copy_into],
          op_ffi_cstr_read: [Function: op_ffi_cstr_read],
          op_ffi_read_bool: [Function: op_ffi_read_bool],
          op_ffi_read_u8: [Function: op_ffi_read_u8],
          op_ffi_read_i8: [Function: op_ffi_read_i8],
          op_ffi_read_u16: [Function: op_ffi_read_u16],
          op_ffi_read_i16: [Function: op_ffi_read_i16],
          op_ffi_read_u32: [Function: op_ffi_read_u32],
          op_ffi_read_i32: [Function: op_ffi_read_i32],
          op_ffi_read_u64: [Function: op_ffi_read_u64],
          op_ffi_read_i64: [Function: op_ffi_read_i64],
          op_ffi_read_f32: [Function: op_ffi_read_f32],
          op_ffi_read_f64: [Function: op_ffi_read_f64],
          op_ffi_read_ptr: [Function: op_ffi_read_ptr],
          op_ffi_unsafe_callback_create: [Function: op_ffi_unsafe_callback_create],
          op_ffi_unsafe_callback_close: [Function: op_ffi_unsafe_callback_close],
          op_ffi_unsafe_callback_ref: [Function: op_ffi_unsafe_callback_ref],
          op_napi_open: [Function: op_napi_open],
          op_http_get_request_header: [Function: op_http_get_request_header],
          op_raw_write_vectored: [Function: op_raw_write_vectored],
          op_can_write_vectored: [Function: op_can_write_vectored],
          op_v8_cached_data_version_tag: [Function: op_v8_cached_data_version_tag],
          op_v8_get_heap_statistics: [Function: op_v8_get_heap_statistics],
          op_vm_run_in_new_context: [Function: op_vm_run_in_new_context],
          op_create_brotli_compress: [Function: op_create_brotli_compress],
          op_create_brotli_decompress: [Function: op_create_brotli_decompress],
          op_http2_connect: [Function: op_http2_connect],
          op_http2_poll_client_connection: [Function: op_http2_poll_client_connection],
          op_http2_client_request: [Function: op_http2_client_request],
          op_http2_client_get_response: [Function: op_http2_client_get_response],
          op_http2_client_get_response_body_chunk: [Function: op_http2_client_get_response_body_chunk],
          op_http2_client_send_data: [Function: op_http2_client_send_data],
          op_http2_client_end_stream: [Function: op_http2_client_end_stream],
          op_http2_client_reset_stream: [Function: op_http2_client_reset_stream],
          op_http2_client_send_trailers: [Function: op_http2_client_send_trailers],
          op_http2_client_get_response_trailers: [Function: op_http2_client_get_response_trailers],
          op_http2_accept: [Function: op_http2_accept],
          op_http2_listen: [Function: op_http2_listen],
          op_http2_send_response: [Function: op_http2_send_response],
          op_cpus: [Function: op_cpus],
          op_npm_process_state: [Function: op_npm_process_state],
          op_main_module: [Function: op_main_module],
          op_ppid: [Function: op_ppid],
          op_set_exit_code: [Function: op_set_exit_code],
          op_spawn_child: [Function: op_spawn_child],
          op_bootstrap_args: [Function: op_bootstrap_args],
          op_bootstrap_pid: [Function: op_bootstrap_pid],
          op_bootstrap_no_color: [Function: op_bootstrap_no_color],
          op_bootstrap_is_tty: [Function: op_bootstrap_is_tty],
          op_snapshot_options: [Function: op_snapshot_options]
        },
        callConsole: [Function (anonymous)],
        console: Object [console] {
          debug: [Function: debug],
          error: [Function: error],
          info: [Function: info],
          log: [Function: log],
          warn: [Function: warn],
          dir: [Function: dir],
          dirxml: [Function: dirxml],
          table: [Function: table],
          trace: [Function: trace],
          group: [Function: group],
          groupCollapsed: [Function: groupCollapsed],
          groupEnd: [Function: groupEnd],
          clear: [Function: clear],
          count: [Function: count],
          countReset: [Function: countReset],
          assert: [Function: assert],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          time: [Function: time],
          timeLog: [Function: timeLog],
          timeEnd: [Function: timeEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context]
        },
        build: {
          target: "x86_64-apple-darwin",
          arch: "x86_64",
          os: "darwin",
          vendor: "apple",
          env: undefined
        },
        setBuildInfo: [Function: setBuildInfo],
        registerErrorBuilder: [Function: registerErrorBuilder],
        buildCustomError: [Function: buildCustomError],
        registerErrorClass: [Function: registerErrorClass],
        enableOpCallTracing: [Function: enableOpCallTracing],
        isOpCallTracingEnabled: [Function: isOpCallTracingEnabled],
        opCallTraces: SafeMap(0) [Map] {},
        handleOpCallTracing: [Function: handleOpCallTracing],
        setUpAsyncStub: [Function: setUpAsyncStub],
        getPromise: [Function: getPromise],
        hasPromise: [Function: hasPromise],
        promiseIdSymbol: Symbol(Deno.core.internalPromiseId),
        internalRidSymbol: Symbol(Deno.internal.rid),
        ensureFastOps: [Function: ensureFastOps],
        resources: [Function: resources],
        metrics: [Function: metrics],
        eventLoopTick: [Function: eventLoopTick],
        BadResource: [class BadResource extends Error],
        BadResourcePrototype: [Error],
        Interrupted: [class Interrupted extends Error],
        InterruptedPrototype: [Error],
        refOpPromise: [Function: refOpPromise],
        unrefOpPromise: [Function: unrefOpPromise],
        setReportExceptionCallback: [Function: setReportExceptionCallback],
        setPromiseHooks: [Function: setPromiseHooks],
        close: [Function: op_close],
        tryClose: [Function: op_try_close],
        read: [Function: op_read],
        readAll: [Function: op_read_all],
        write: [Function: op_write],
        writeAll: [Function: op_write_all],
        writeTypeError: [Function: op_write_type_error],
        readSync: [Function: op_read_sync],
        writeSync: [Function: op_write_sync],
        shutdown: [Function: op_shutdown],
        print: [Function: print],
        setMacrotaskCallback: [Function: setMacrotaskCallback],
        setNextTickCallback: [Function: setNextTickCallback],
        runMicrotasks: [Function: runMicrotasks],
        hasTickScheduled: [Function: hasTickScheduled],
        setHasTickScheduled: [Function: setHasTickScheduled],
        evalContext: [Function: evalContext],
        hostObjectBrand: Symbol(Deno.core.hostObject),
        encode: [Function: encode],
        decode: [Function: decode],
        serialize: [Function: serialize],
        deserialize: [Function: deserialize],
        getPromiseDetails: [Function: getPromiseDetails],
        getProxyDetails: [Function: getProxyDetails],
        isAnyArrayBuffer: [Function: isAnyArrayBuffer],
        isArgumentsObject: [Function: isArgumentsObject],
        isArrayBuffer: [Function: isArrayBuffer],
        isArrayBufferView: [Function: isArrayBufferView],
        isAsyncFunction: [Function: isAsyncFunction],
        isBigIntObject: [Function: isBigIntObject],
        isBooleanObject: [Function: isBooleanObject],
        isBoxedPrimitive: [Function: isBoxedPrimitive],
        isDataView: [Function: isDataView],
        isDate: [Function: isDate],
        isGeneratorFunction: [Function: isGeneratorFunction],
        isGeneratorObject: [Function: isGeneratorObject],
        isMap: [Function: isMap],
        isMapIterator: [Function: isMapIterator],
        isModuleNamespaceObject: [Function: isModuleNamespaceObject],
        isNativeError: [Function: isNativeError],
        isNumberObject: [Function: isNumberObject],
        isPromise: [Function: isPromise],
        isProxy: [Function: isProxy],
        isRegExp: [Function: isRegExp],
        isSet: [Function: isSet],
        isSetIterator: [Function: isSetIterator],
        isSharedArrayBuffer: [Function: isSharedArrayBuffer],
        isStringObject: [Function: isStringObject],
        isSymbolObject: [Function: isSymbolObject],
        isTypedArray: [Function: isTypedArray],
        isWeakMap: [Function: isWeakMap],
        isWeakSet: [Function: isWeakSet],
        memoryUsage: [Function: memoryUsage],
        setWasmStreamingCallback: [Function: setWasmStreamingCallback],
        abortWasmStreaming: [Function: abortWasmStreaming],
        destructureError: [Function: destructureError],
        opNames: [Function: opNames],
        eventLoopHasMoreWork: [Function: eventLoopHasMoreWork],
        byteLength: [Function: byteLength],
        setHandledPromiseRejectionHandler: [Function: setHandledPromiseRejectionHandler],
        setUnhandledPromiseRejectionHandler: [Function: setUnhandledPromiseRejectionHandler],
        reportUnhandledException: [Function: reportUnhandledException],
        reportUnhandledPromiseRejection: [Function: reportUnhandledPromiseRejection],
        queueTimer: [Function: queueTimer],
        cancelTimer: [Function: cancelTimer],
        refTimer: [Function: refTimer],
        unrefTimer: [Function: unrefTimer],
        getTimerDepth: [Function: getTimerDepth],
        currentUserCallSite: [Function: currentUserCallSite],
        wrapConsole: [Function: wrapConsole],
        v8Console: Object [console] {
          debug: [Function: debug],
          error: [Function: error],
          info: [Function: info],
          log: [Function: log],
          warn: [Function: warn],
          dir: [Function: dir],
          dirxml: [Function: dirxml],
          table: [Function: table],
          trace: [Function: trace],
          group: [Function: group],
          groupCollapsed: [Function: groupCollapsed],
          groupEnd: [Function: groupEnd],
          clear: [Function: clear],
          count: [Function: count],
          countReset: [Function: countReset],
          assert: [Function: assert],
          profile: [Function: profile],
          profileEnd: [Function: profileEnd],
          time: [Function: time],
          timeLog: [Function: timeLog],
          timeEnd: [Function: timeEnd],
          timeStamp: [Function: timeStamp],
          context: [Function: context]
        }
      },
      warnOnDeprecatedApi: [Function: warnOnDeprecatedApi],
      getBitmapData: [Function: getBitmapData]
    }
  },
  EventSource: [class EventSource extends EventTarget],
  alert: [Function: alert],
  atob: [Function: atob],
  btoa: [Function: btoa],
  caches: CacheStorage {},
  clearInterval: [Function: clearInterval],
  clearTimeout: [Function: clearTimeout],
  close: [Function: windowClose],
  closed: false,
  confirm: [Function: confirm],
  createImageBitmap: [Function: createImageBitmap],
  crypto: Crypto { subtle: SubtleCrypto {} },
  fetch: [Function: fetch],
  localStorage: Storage { length: 0 },
  name: "",
  navigator: Navigator {
    hardwareConcurrency: 12,
    userAgent: "Deno/1.40.3",
    language: "en-GB",
    languages: [ "en-GB" ]
  },
  onbeforeunload: null,
  onerror: null,
  onload: null,
  onunhandledrejection: null,
  onunload: null,
  performance: Performance { timeOrigin: 1741864809300 },
  prompt: [Function: prompt],
  queueMicrotask: [Function: queueMicrotask],
  reportError: [Function: reportError],
  self: "CYCLIC REF: [object Window]",
  sessionStorage: Storage { length: 0 },
  setInterval: [Function: setInterval],
  setTimeout: [Function: setTimeout],
  structuredClone: [Function: structuredClone],
  window: "CYCLIC REF: [object Window]"
}
real global Window {}

Script done on Thu Mar 13 11:20:12 2025
deno 1.40.3 (release, x86_64-apple-darwin)
v8 12.1.285.6
typescript 5.3.3
