[0m[1m[31merror[no-undef][0m: [0m[1mdescribe is not defined[0m
 [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:4:1[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m4 | [0mdescribe('useFlag hook', function descUseFlagSuite() {
 [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:4:26[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m4 | [0mdescribe('useFlag hook', function descUseFlagSuite() {
  [0m[38;5;12m | [0m                         [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m5 | [0m  function renderForTest(on?: boolean) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m6 | [0m    const { result } = renderHook(() => useHook(on));
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m7 | [0m    return result;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m8 | [0m  }
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
  [0m[38;5;12m | [0m
 [0m[38;5;12m9 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m10 | [0m  function change(ref, mutator: string, expected: boolean) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m11 | [0m    act(ref.current[mutator]);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m12 | [0m    expect(ref.current.flag).toBe(expected);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m13 | [0m  }
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m14 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m15 | [0m  it('should provide flag and setter functions for default flag is not "on"', function testUseFlagDefault() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m16 | [0m    const hook = renderForTest();
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m17 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    expect(hook.current.flag).toBe(false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m19 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m20 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m21 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m22 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m23 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m24 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m25 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m26 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m27 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m28 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m29 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m30 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m31 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m32 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m33 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m34 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m35 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m36 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m40 | [0m  });
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m41 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m42 | [0m  it('should provide flag and setter functions for flag initially "on"', function testUseFlagOn() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m43 | [0m    const hook = renderForTest(true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m44 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m45 | [0m    expect(hook.current.flag).toBe(true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m46 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m47 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m48 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m49 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m50 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m51 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m52 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m53 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m54 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m56 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m57 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m58 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m59 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m60 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m61 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m63 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m66 | [0m  });
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m});
  [0m[38;5;12m | [0m[0m[1m[31m^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
 [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:5:2[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m5 | [0m  function renderForTest(on?: boolean) {
 [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m6 | [0m    const { result } = renderHook(() => useHook(on));
 [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m7 | [0m    return result;
 [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m8 | [0m  }
 [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
  [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:10:2[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m10 | [0m  function change(ref, mutator: string, expected: boolean) {
  [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m11 | [0m    act(ref.current[mutator]);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m12 | [0m    expect(ref.current.flag).toBe(expected);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m13 | [0m  }
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-undef][0m: [0m[1mexpect is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:12:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m12 | [0m    expect(ref.current.flag).toBe(expected);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mit is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:15:2[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m15 | [0m  it('should provide flag and setter functions for default flag is not "on"', function testUseFlagDefault() {
  [0m[38;5;12m | [0m  [0m[1m[31m^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:15:78[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m15 | [0m  it('should provide flag and setter functions for default flag is not "on"', function testUseFlagDefault() {
  [0m[38;5;12m | [0m                                                                              [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m16 | [0m    const hook = renderForTest();
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m17 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    expect(hook.current.flag).toBe(false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m19 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m20 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m21 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m22 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m23 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m24 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m25 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m26 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m27 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m28 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m29 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m30 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m31 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m32 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m33 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m34 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m35 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m36 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m40 | [0m  });
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:18:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    expect(hook.current.flag).toBe(false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-undef][0m: [0m[1mexpect is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:18:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    expect(hook.current.flag).toBe(false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:20:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m20 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:21:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m21 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:22:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m22 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:24:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m24 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:25:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m25 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:26:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m26 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:27:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m27 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:28:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m28 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:30:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m30 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:31:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m31 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:32:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m32 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:33:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m33 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:34:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m34 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:35:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m35 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:36:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m36 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:38:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:39:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m    change(hook, 'reset', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-undef][0m: [0m[1mit is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:42:2[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m42 | [0m  it('should provide flag and setter functions for flag initially "on"', function testUseFlagOn() {
  [0m[38;5;12m | [0m  [0m[1m[31m^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:42:73[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m42 | [0m  it('should provide flag and setter functions for flag initially "on"', function testUseFlagOn() {
  [0m[38;5;12m | [0m                                                                         [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m43 | [0m    const hook = renderForTest(true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m44 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m45 | [0m    expect(hook.current.flag).toBe(true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m46 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m47 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m48 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m49 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m50 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m51 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m52 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m53 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m54 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m56 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m57 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m58 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m59 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m60 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m61 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m63 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m66 | [0m  });
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:43:16[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m43 | [0m    const hook = renderForTest(true);
  [0m[38;5;12m | [0m                 [0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:45:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m45 | [0m    expect(hook.current.flag).toBe(true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-undef][0m: [0m[1mexpect is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:45:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m45 | [0m    expect(hook.current.flag).toBe(true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:47:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m47 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:48:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m48 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:49:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m49 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:51:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m51 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:52:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m52 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:53:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m53 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:54:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m54 | [0m    change(hook, 'set', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:55:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m    change(hook, 'clear', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:57:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m57 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:58:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m58 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:59:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m59 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:60:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m60 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:61:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m61 | [0m    change(hook, 'toggle', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:62:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0m    change(hook, 'toggle', false);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:64:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.test.ts[0m[0m[33m:65:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m    change(hook, 'reset', true);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-node-globals][0m: [0m[1mNodeJS globals are not available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/setupTests.ts[0m[0m[33m:14:1[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m14 | [0mglobal.BroadcastChannel = MockBroadcastChannel;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use globalThis instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-node-globals


[0m[1m[31merror[no-undef][0m: [0m[1mglobal is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/setupTests.ts[0m[0m[33m:14:1[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m14 | [0mglobal.BroadcastChannel = MockBroadcastChannel;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.ts[0m[0m[33m:18:32[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m  const set = useCallback(() => setFlag(true), []);
  [0m[38;5;12m | [0m                                [0m[1m[31m^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useFlag.ts[0m[0m[33m:19:34[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m19 | [0m  const clear = useCallback(() => setFlag(false), []);
  [0m[38;5;12m | [0m                                  [0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-node-globals][0m: [0m[1mNodeJS globals are not available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:10:5[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m10 | [0mif (global.BroadcastChannel) {
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use globalThis instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-node-globals


[0m[1m[31merror[no-undef][0m: [0m[1mglobal is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:10:5[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m10 | [0mif (global.BroadcastChannel) {
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:17:23[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m17 | [0mconst debug = DEBUG ? console.warn : () => null;
  [0m[38;5;12m | [0m                      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:33:15[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m33 | [0m  postMessage: jest.fn(),
  [0m[38;5;12m | [0m               [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:34:9[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m34 | [0m  close: jest.fn(),
  [0m[38;5;12m | [0m         [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:35:20[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m35 | [0m  addEventListener: jest.fn(),
  [0m[38;5;12m | [0m                    [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:36:23[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m36 | [0m  removeEventListener: jest.fn(),
  [0m[38;5;12m | [0m                       [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:37:17[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0m  dispatchEvent: jest.fn(),
  [0m[38;5;12m | [0m                 [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:38:13[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m  onmessage: jest.fn(),
  [0m[38;5;12m | [0m             [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:39:18[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m  onmessageerror: jest.fn(),
  [0m[38;5;12m | [0m                  [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:53:56[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m53 | [0m  (channel.postMessage as jest.Mock).mockImplementation(function (
  [0m[38;5;12m | [0m                                                        [0m[1m[31m^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m54 | [0m    message: any,
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m  ) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m56 | [0m    debug(nameOf(nameOf(channel.postMessage)), message);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m57 | [0m    try {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m58 | [0m      JSON.parse(JSON.stringify(message));
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m59 | [0m      // eslint-disable-next-line @typescript-eslint/no-unused-vars
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m60 | [0m    } catch (_unusedException) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m61 | [0m      // istanbul ignore next
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0m      if (typeof channel.onmessageerror === 'function') {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m63 | [0m        channel.onmessageerror(message);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m      }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m66 | [0m    // istanbul ignore else
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m    if (typeof channel.onmessage === 'function') {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m68 | [0m      channel.onmessage(message);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m69 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m70 | [0m  });
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:54:12[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m54 | [0m    message: any,
  [0m[38;5;12m | [0m             [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:85:23[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m85 | [0m    channel.onmessage = jest.fn();
  [0m[38;5;12m | [0m                        [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-undef][0m: [0m[1mjest is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:89:28[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m89 | [0m    channel.onmessageerror = jest.fn();
  [0m[38;5;12m | [0m                             [0m[1m[31m^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:122:37[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m122 | [0mexport const MockBroadcastChannel = function (
   [0m[38;5;12m | [0m                                    [0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m123 | [0m  this: MockBroadcastChannel,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m124 | [0m  name: string,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m125 | [0m) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m126 | [0m  debug(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m127 | [0m    `${displayName} constructor(${name}) name:${channel.name} mockName:${
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m128 | [0m      nameOf(channel.postMessage)
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m129 | [0m    }`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m130 | [0m  );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m131 | [0m  channel.name = channel.name === 'UNNAMED'
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m132 | [0m    ? name
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m133 | [0m    : `${channel.name},${name}`;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m134 | [0m  Object.keys(channel).forEach((key: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m135 | [0m    this[key] = channel[key];
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m136 | [0m  });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m137 | [0m
   [0m[38;5;12m | [0m[0m[1m[31m[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m138 | [0m  this.name = name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m139 | [0m  return this;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m140 | [0m} as any as MockBroadcastChannelConstructor;
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/mockBroadcastChannel.ts[0m[0m[33m:140:6[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m140 | [0m} as any as MockBroadcastChannelConstructor;
   [0m[38;5;12m | [0m     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:32:27[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m32 | [0mexport function getFnName(_unusedCallback: any): string {
  [0m[38;5;12m | [0m                          [0m[1m[31m^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:32:44[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m32 | [0mexport function getFnName(_unusedCallback: any): string {
  [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:37:8[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0mexport function brandFn(callback: any, name?: string) {
  [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m  if (!callback._fnuid) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m    brandId++;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m40 | [0m    callback._fnuid = brandId;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m41 | [0m  }
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m42 | [0m  name = name || getFnName(callback);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m43 | [0m  return `${name}#${callback._fnuid}()`;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m44 | [0m}
  [0m[38;5;12m | [0m[0m[1m[31m^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:37:8[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0mexport function brandFn(callback: any, name?: string) {
  [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m38 | [0m  if (!callback._fnuid) {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m39 | [0m    brandId++;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m40 | [0m    callback._fnuid = brandId;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m41 | [0m  }
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m42 | [0m  name = name || getFnName(callback);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m43 | [0m  return `${name}#${callback._fnuid}()`;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m44 | [0m}
  [0m[38;5;12m | [0m[0m[1m[31m^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:37:25[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0mexport function brandFn(callback: any, name?: string) {
  [0m[38;5;12m | [0m                        [0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:37:35[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m37 | [0mexport function brandFn(callback: any, name?: string) {
  [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-undef][0m: [0m[1mstate is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:49:29[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m49 | [0m  const now = JSON.stringify(state, void 0, 2);
  [0m[38;5;12m | [0m                             [0m[1m[31m^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:55:4[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m      // TODO use line diff package of some kind if possible, this is very simple...
  [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:67:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m    console.warn(
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/diffState.ts[0m[0m[33m:72:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    console.warn(
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:62:8[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0mexport function useWindowSize() {
  [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m63 | [0m  const [windowSize, setWindowSize] = useState<IWindowGeometry>(
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m    getWindowGeometry(),
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m  );
  [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m66 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m  useLayoutEffect(function whenWeMount() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m68 | [0m    function updateWindowSize() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m69 | [0m      setWindowSize(getWindowGeometry());
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m70 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m71 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    window.addEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m73 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m74 | [0m    return function whenWeUnMount() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m76 | [0m    };
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m77 | [0m  }, []); // empty dependency array for mount/unmount
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m78 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m79 | [0m  return windowSize;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m80 | [0m} // useWindowSize()
  [0m[38;5;12m | [0m[0m[1m[31m^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:62:8[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m62 | [0mexport function useWindowSize() {
  [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m63 | [0m  const [windowSize, setWindowSize] = useState<IWindowGeometry>(
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m64 | [0m    getWindowGeometry(),
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m65 | [0m  );
  [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m66 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m  useLayoutEffect(function whenWeMount() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m68 | [0m    function updateWindowSize() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m69 | [0m      setWindowSize(getWindowGeometry());
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m70 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m71 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    window.addEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m73 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m74 | [0m    return function whenWeUnMount() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m76 | [0m    };
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m77 | [0m  }, []); // empty dependency array for mount/unmount
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m78 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m79 | [0m  return windowSize;
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m80 | [0m} // useWindowSize()
  [0m[38;5;12m | [0m[0m[1m[31m^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:67:18[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m67 | [0m  useLayoutEffect(function whenWeMount() {
  [0m[38;5;12m | [0m                  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m68 | [0m    function updateWindowSize() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m69 | [0m      setWindowSize(getWindowGeometry());
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m70 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m71 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    window.addEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m73 | [0m
  [0m[38;5;12m | [0m[0m[1m[31m[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m74 | [0m    return function whenWeUnMount() {
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m76 | [0m    };
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m77 | [0m  }, []); // empty dependency array for mount/unmount
  [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:68:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m68 | [0m    function updateWindowSize() {
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m69 | [0m      setWindowSize(getWindowGeometry());
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m70 | [0m    }
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-window][0m: [0m[1mWindow is no longer available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:72:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    window.addEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Instead, use `globalThis`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-window


[0m[1m[31merror[no-window-prefix][0m: [0m[1mFor compatibility between the Window context and the Web Workers, calling Web APIs via `window` is disallowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:72:3[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m72 | [0m    window.addEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Instead, call this API via `self`, `globalThis`, or no extra prefix

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-window-prefix


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:74:10[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m74 | [0m    return function whenWeUnMount() {
  [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m76 | [0m    };
  [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-window][0m: [0m[1mWindow is no longer available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:75:4[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Instead, use `globalThis`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-window


[0m[1m[31merror[no-window-prefix][0m: [0m[1mFor compatibility between the Window context and the Web Workers, calling Web APIs via `window` is disallowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/useWindowSize.ts[0m[0m[33m:75:4[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m75 | [0m      window.removeEventListener('resize', updateWindowSize);
  [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Instead, call this API via `self`, `globalThis`, or no extra prefix

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-window-prefix


[0m[1m[31merror[no-node-globals][0m: [0m[1mNodeJS globals are not available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:17:12[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m17 | [0m    : typeof global !== 'undefined'
  [0m[38;5;12m | [0m             [0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use globalThis instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-node-globals


[0m[1m[31merror[no-node-globals][0m: [0m[1mNodeJS globals are not available in Deno[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:18:5[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    ? global
  [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use globalThis instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-node-globals


[0m[1m[31merror[no-undef][0m: [0m[1mglobal is not defined[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:18:5[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m18 | [0m    ? global
  [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-undef


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:33:34[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m33 | [0m  const thing = getGlobal(bun) as any;
  [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:55:35[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m55 | [0m  const thing = getGlobal(deno) as any;
  [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:77:35[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m77 | [0m  const thing = getGlobal(node) as any;
  [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:101:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m101 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:159:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m159 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:164:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m164 | [0mconsole.log(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:168:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m168 | [0mconsole.log(`=== real global`, gg);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/detect.ts[0m[0m[33m:169:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m169 | [0mconsole.log(`=== process`, gg.process);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:17:12[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m17 | [0mconst win: any = {
  [0m[38;5;12m | [0m           [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:98:34[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m98 | [0m  const thing = getGlobal(bun) as any;
  [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:120:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m120 | [0m  const thing = getGlobal(deno) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:142:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m142 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:166:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m166 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:237:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m237 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:240:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m240 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:273:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m273 | [0mexport const describe = () => {};
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:275:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m275 | [0mexport const test = () => {};
   [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:283:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m283 | [0mexport const jest: any = {};
   [0m[38;5;12m | [0m                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:297:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m297 | [0mexport const uev: any = {};
   [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:302:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m302 | [0mfunction mockScreen() {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m303 | [0m  const screen = {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m304 | [0m    queryAllByAltText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m305 | [0m    queryAllByDisplayValue: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m306 | [0m    queryAllByLabelText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m307 | [0m    queryAllByPlaceholderText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m308 | [0m    queryAllByRole: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m309 | [0m    queryAllByTestId: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m310 | [0m    queryAllByText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m311 | [0m    queryAllByTitle: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m312 | [0m  };
   [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m313 | [0m  return screen;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m314 | [0m} // mockScreen()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-namespace][0m: [0m[1mTypeScript's `module` and `namespace` are discouraged to
use[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:326:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m326 | [0mnamespace React {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m327 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m328 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m329 | [0m  export type Dispatch<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m330 | [0m  export type SetStateAction<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m331 | [0m}
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use ES2015 module syntax (`import`/`export`) to organize
the code instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-namespace


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:327:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m327 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:328:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m328 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:332:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m332 | [0mexport type ReactElement = any;
   [0m[38;5;12m | [0m                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:333:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m333 | [0mexport type ReactNode = any;
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:347:16[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m347 | [0mconst logger = console.warn;
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:360:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m360 | [0mfunction show(what: unknown, mode?: string, max?: number): any {
   [0m[38;5;12m | [0m                                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x8.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:389:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m389 | [0m      .replace(/\x08/g, '\\x08') // backspace \b conflict with regex \b
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:390:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m390 | [0m      .replace(/\x0d\x0a/g, '\\x0d\\x0a') // CR/LF combo
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xa.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:391:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m391 | [0m      .replace(/\x0a/g, '\\x0a') // line feed
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:392:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m392 | [0m      .replace(/\x0d/g, '\\x0d') // carriage ret
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:450:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m450 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                         [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:450:41[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m450 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:471:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m471 | [0m      console.error(`EXCEPTION expectToBe [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:476:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m476 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:476:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m476 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-prototype-builtins][0m: [0m[1mAccess to Object.prototype.hasOwnProperty is not allowed from target object[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:501:7[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m501 | [0m    if (thing.hasOwnProperty(key)) {
   [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-prototype-builtins


[0m[1m[31merror[no-unused-vars][0m: [0m[1m`key` is never used[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:529:31[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m529 | [0mexport function jsonKeySorter(key: string, value: unknown): unknown {
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: If this is intentional, prefix it with an underscore like `_key`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-unused-vars


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:558:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m558 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:558:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m558 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                                                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:564:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m564 | [0m      }, {} as Record<string, any>);
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:615:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m615 | [0mfunction strV(what?: any): string | undefined {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:659:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m659 | [0mfunction strJ(what?: any, indent = 2): string {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:666:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m666 | [0m      console.error(`EXCEPTION strJ`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:672:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m672 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:672:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m672 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:690:3[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m690 | [0m    console.error(`EXCEPTION expectToEqual [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:699:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m699 | [0m  desc = 'expectToMatch',
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:700:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m700 | [0m  times = 1,
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:701:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m701 | [0m  matchArray?: any,
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:816:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m816 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m817 | [0m  return {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m818 | [0m    not: {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m819 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m820 | [0m        expectNotToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m821 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m822 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m823 | [0m          `expect(${got}).not.toBe(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m824 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m825 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m826 | [0m      toHaveAttribute: (name: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m827 | [0m        const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m828 | [0m          .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m829 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m830 | [0m            return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m831 | [0m          });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m832 | [0m        if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m833 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m834 | [0m            attr.value === undefined ? 'not present' : undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m835 | [0m            attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m836 | [0m            `expect(${got}).not.toHaveAttribute(${name}) -- attribute ${name} exists`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m837 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m838 | [0m        } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m839 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m840 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m841 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m842 | [0m            `expect(${got}).not.toHaveAttribute(${name})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m843 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m844 | [0m        }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m845 | [0m      }, // .not.toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m846 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m847 | [0m        expectNotToMatch(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m848 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m849 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m850 | [0m          `expect(${got}).not.toMatch(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m851 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m852 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m853 | [0m    }, // .not.
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m854 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m855 | [0m      expectToBe(got, expected, `expect(${got}).toBe(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m856 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m857 | [0m    toHaveAttribute: (name: string, value: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m858 | [0m      const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m859 | [0m        .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m860 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m861 | [0m          return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m862 | [0m        });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m863 | [0m      if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m864 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m865 | [0m          attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m866 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m867 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value})'`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m868 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m869 | [0m      } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m870 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m871 | [0m          undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m872 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m873 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value}') -- attribute ${name} does not exist`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m874 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m875 | [0m      }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m876 | [0m    }, // .toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m877 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m878 | [0m      expectToMatch(expected, got, `expect(${got}).toMatch(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m879 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m880 | [0m  }; // return
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m881 | [0m} // expect()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:816:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m816 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:819:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m819 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:829:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m829 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:846:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m846 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:854:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m854 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:860:18[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m860 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:877:23[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m877 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:934:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m934 | [0m  | HTMLCollectionOf<any>
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:935:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m935 | [0m  | NodeListOf<any>
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:993:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m993 | [0mlet _LS = 'L'; // £ pound sterling UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:994:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m994 | [0mlet _EL = '_'; // … ellipsis UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:995:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m995 | [0mlet _LDQ = '\\'; // “ left quote (double) UTF8
   [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:996:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m996 | [0mlet _RDQ = '/'; // ” right quote (double) UTF8
   [0m[38;5;12m | [0m                   [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:998:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m998 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:998:71[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m998 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                                                                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1001:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1001 | [0m  _LS = '\xa3'; // £ pound sterling UTF8
    [0m[38;5;12m | [0m                   [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1002:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1002 | [0m  _EL = '\u2026'; // … ellipsis UTF8
    [0m[38;5;12m | [0m                     [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1003:22[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1003 | [0m  _LDQ = '\u201c'; // “ left quote (double) UTF8
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1004:22[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1004 | [0m  _RDQ = '\u201d'; // ” right quote (double) UTF8
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1007:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1007 | [0mexport const LS = _LS; // £ pound sterling UTF8
    [0m[38;5;12m | [0m                          [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1008:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1008 | [0mexport const EL = _EL; // … ellipsis UTF8
    [0m[38;5;12m | [0m                          [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1010:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1010 | [0mexport const LDQ = _LDQ; // “ left quote (double) UTF8
    [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1011:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1011 | [0mexport const RDQ = _RDQ; // ” right quote (double) UTF8
    [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x0.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1079:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1079 | [0m  /[\s\x00-\x20\u00a0\u202F\uFEFF\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u200B\u205F\u3000\u303F\xAD\u2010\u2011\u2027\uFE63\uFF0D]/g;
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1184:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1184 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1184:31[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1184 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1185:28[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1185 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1185:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1185 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1226:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1226 | [0mexport function trace(...args: any[]): void {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1228:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1228 | [0m    console.warn('TRACE', ...args);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1313:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1313 | [0mexport const mockWindowLocation = (brand = 'site', wnd?: Window): Window => {
    [0m[38;5;12m | [0m                                   [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1376:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1376 | [0m  where = 'LOG MOCK',
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1380:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1380 | [0m    console.warn(`logMock(${where}) MOCKED: ${fn.getMockName()}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1382:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1382 | [0m    console.warn(`logMock(${where}) NOT MOCKED: ${fn.name}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1443:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1443 | [0m    function checkIds(openTag: string, name: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1444 | [0m      if (name.indexOf(prefix) < 0 && !reAllowId.test(name)) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1445 | [0m        expect(`Found in element: ${openTag}`).toBe(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1446 | [0m          `Element with non-unique id="${name}" should contain our unique app id: ${prefix} for example: "${prefix}-${name}"`,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1447 | [0m        );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1448 | [0m      }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1449 | [0m      return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1450 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1540:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1540 | [0m        function replaceAttr(
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1541 | [0m          _unusedMatch: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1542 | [0m          name: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1543 | [0m          value: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1544 | [0m        ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1545 | [0m          if (name === 'title') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1546 | [0m            titles.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1547 | [0m              `expect(screen.queryByTitle(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1548 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1549 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1550 | [0m          } else if (name === 'aria-label') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1551 | [0m            labels.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1552 | [0m              `expect(screen.queryByLabelText(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1553 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1554 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1555 | [0m          } else if (name === 'value') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1556 | [0m            values.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1557 | [0m              `expect(screen.queryByDisplayValue(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1558 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1559 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1560 | [0m          }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1561 | [0m          return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1562 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1572:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1572 | [0m        function toRegex(_unusedFull: string, text: string) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1573 | [0m          const quoted = quotemeta(text.replace(reSpaceMarker, ''));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1574 | [0m          return quoted ? `/^\\s*${quoted}\\s*$/m` : 'BLANKBLANK';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1575 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1636:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1636 | [0m    } catch (_unused) {}
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1639:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1639 | [0m  } catch (_unused) {}
    [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1655:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1655 | [0m    function splitElementsAfter(_unused: string, after: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1656 | [0m      return `>${NL}${showSpaces(after, space)}`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1657 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1660:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1660 | [0m    function splitElementsBefore(_unused: string, before: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1661 | [0m      return `${showSpaces(before, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1662 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1665:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1665 | [0m    function splitElementsBetween(_unused: string, between: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1666 | [0m      return `>${NL}${showSpaces(between, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1667 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1683:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1683 | [0m  return text.replace(/\s/g, function replacespace(match) {
    [0m[38;5;12m | [0m                             [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1684 | [0m    return match === '\n' ? match : space;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1685 | [0m  });
    [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1701:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1701 | [0m    function replaceOuterSpaces(
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1702 | [0m      _unused: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1703 | [0m      leading: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1704 | [0m      middle: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1705 | [0m      trailing: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1706 | [0m    ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1707 | [0m      return (replaceSpaces(leading, space) + middle +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1708 | [0m        replaceSpaces(trailing, space));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1709 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1805:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1805 | [0mfunction padHex(value: number, max = 2) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1806 | [0m  //return value.toString(16).padStart(max, '0'); // if ES6 supported
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1807 | [0m  const val = value.toString(16);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1808 | [0m  return '0000000000000000'.substring(0, max - val.length) + val;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1809 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1932:26[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1932 | [0m      .replace(reStyleAttr, function replaceStyles(_unused, styles) {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1933 | [0m        return `styles="\n${TAB}${TAB}${
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1934 | [0m          styles
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1935 | [0m            .replace(reEndingSemi, '')
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1936 | [0m            .split(reSemiSpaces)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1937 | [0m            .join(`;\n${TAB}${TAB}`)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1938 | [0m        }\n${TAB}"`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1939 | [0m      }).replace(reBlankLines, '\n\n') // remove excess newlines
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:1961:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1961 | [0m        function replaceAttribute(_unused, attr, value) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1962 | [0m          let show = reAttrsToShow.test(attr);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1963 | [0m          show = FLIP ? !show : show;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1964 | [0m          return show ? `\n${TAB}${TAB}${attr}=${value}` : '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1965 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2096:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2096 | [0m      function replaceIndexing(_unused, idx, levels, list) {
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2097 | [0m        if (idx) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2098 | [0m          index = parseInt(idx, 10);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2099 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2100 | [0m        if (levels) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2101 | [0m          up = levels.length;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2102 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2103 | [0m        if (list) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2104 | [0m          dumpList = true;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2105 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2106 | [0m        return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2107 | [0m      },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2205:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2205 | [0m      console.warn(
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2296:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2296 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2297 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2298 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2299 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2296:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2296 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2297 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2298 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2299 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2305:118[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2305 | [0m * @param ellipsis {string} value to use when limit is positive and entries are elided from the output. defaults to '…'.
    [0m[38;5;12m | [0m                                                                                                                     [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2335:141[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2335 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2335:146[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2335 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                                  [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2464:38[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2464 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2464:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2464 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                             [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2471:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2471 | [0m      for (const key of (thing as Set<any>).keys()) {
    [0m[38;5;12m | [0m                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2539:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2539 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2539:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2539 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2567:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2567 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2567:42[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2567 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                         [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2591:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2591 | [0m      console.warn(firstDump.elementSources);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2618:52[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2618 | [0m    const targetKey = (Object.keys(element || {}) as any).find((
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2639:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2639 | [0m    console.warn(`Exception getElementInfo[${exception}]`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2644:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2644 | [0m        showThing(element, void 0, true)
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2667:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2667 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                          [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2667:35[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2667 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2685:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2685 | [0m      console.warn(`EXCEPTION showEvent#show[${exception}]`);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2728:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2728 | [0m        showVal('details'), // TODO details???
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:2753:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2753 | [0m      // TODO view(null)
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:3451:23[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m3451 | [0m  const expectMatches: any = ['   [5] @LIST ', '5', '', '@LIST'];
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-regex-spaces][0m: [0m[1mmore than one consecutive spaces in RegExp is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4465:24[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4465 | [0mconst reRegexSpaces2 = /\bregex \tand\nspaces   \u1999/gm;
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-regex-spaces


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4524:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4524 | [0mconst jsonAll: any = {
    [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4562:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4562 | [0mconst expectJson: any = {
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4869:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4869 | [0mexpectToBe(strV(false), undefined, 'strV(false) should answer undefined');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4921:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4921 | [0m  strV(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4938:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4938 | [0mconst endlessObj: any = {};
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:4982:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4982 | [0mexpectToBe(strJ(false), 'false', 'strJ(false) should show as unquoted');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5013:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5013 | [0m  strJ(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5162:30[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5162 | [0m    '_____got': 'al;kskdj;w;lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                               [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5163:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5163 | [0m    'diffStart': 'lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                     [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5170:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5170 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: ` ` is \u{2000} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5170:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5170 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                       [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5367:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5367 | [0m  console.warn(`NOT OK FAILL:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5456:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5456 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5457:47[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5457 | [0mdocument.getElementsByClassName = () => [] as any;
    [0m[38;5;12m | [0m                                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5510:55[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5510 | [0mdocument.querySelectorAll = () => [div, div, span] as any;
    [0m[38;5;12m | [0m                                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5657:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5657 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5658:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5658 | [0mdocument.getElementById = () => openId as any;
    [0m[38;5;12m | [0m                                          [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5659:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5659 | [0mdocument.getElementsByClassName = () => [openId] as any;
    [0m[38;5;12m | [0m                                                    [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5855:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5855 | [0m  console.warn(`\ngetHtml: `, html);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5856:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5856 | [0m  console.warn(`\ngetHtmlNice: `, getHtmlNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5857:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5857 | [0m  console.warn(`\ngetTextNice: `, getTextNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5900:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5900 | [0m  console.warn(`NOT OK FAILN:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5910:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5910 | [0m  console.warn(`NOT OK FAILO1: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5912:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5912 | [0m  console.warn(`NOT OK FAILO2:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5914:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5914 | [0m  console.warn(`NOT OK FAILO3: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5916:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5916 | [0m  console.warn(`NOT OK FAILO4:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5918:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5918 | [0m  console.warn(`NOT OK FAILO5: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5920:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5920 | [0m  console.warn(`NOT OK FAILO6:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5922:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5922 | [0m  console.warn(`NOT OK FAILO7:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5924:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5924 | [0m  console.warn(`NOT OK FAILO8:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5926:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5926 | [0m  console.warn(`NOT OK FAILO9:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5980:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5980 | [0m  console.warn(`NOT OK FAILP1: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:5982:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5982 | [0m  console.warn(`NOT OK FAILP2: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6016:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6016 | [0m  getTypeName(true),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6259:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6259 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6259:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6259 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6304:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6304 | [0mexpectToBe(str(false), 'false', 'str(false) should return string false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6404:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6404 | [0m  showThing(false, 12),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6532:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6532 | [0m  showThing(false, 2),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tscompiler.ts[0m[0m[33m:6985:15[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6985 | [0mconst elDump: any = {
    [0m[38;5;12m | [0m              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:25:12[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m25 | [0mconst win: any = {
  [0m[38;5;12m | [0m           [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:106:34[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m106 | [0m  const thing = getGlobal(bun) as any;
   [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:128:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m128 | [0m  const thing = getGlobal(deno) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:150:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m150 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:174:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m174 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:245:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m245 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:248:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m248 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:281:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m281 | [0mexport const describe = () => {};
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:283:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m283 | [0mexport const test = () => {};
   [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:291:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m291 | [0mexport const jest: any = {};
   [0m[38;5;12m | [0m                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:305:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m305 | [0mexport const uev: any = {};
   [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:310:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m310 | [0mfunction mockScreen() {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m311 | [0m  const screen = {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m312 | [0m    queryAllByAltText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m313 | [0m    queryAllByDisplayValue: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m314 | [0m    queryAllByLabelText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m315 | [0m    queryAllByPlaceholderText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m316 | [0m    queryAllByRole: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m317 | [0m    queryAllByTestId: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m318 | [0m    queryAllByText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m319 | [0m    queryAllByTitle: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m320 | [0m  };
   [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m321 | [0m  return screen;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m322 | [0m} // mockScreen()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-namespace][0m: [0m[1mTypeScript's `module` and `namespace` are discouraged to
use[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:326:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m326 | [0mnamespace React {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m327 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m328 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m329 | [0m  export type Dispatch<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m330 | [0m  export type SetStateAction<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m331 | [0m}
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use ES2015 module syntax (`import`/`export`) to organize
the code instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-namespace


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:327:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m327 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:328:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m328 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:332:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m332 | [0mexport type ReactElement = any;
   [0m[38;5;12m | [0m                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:333:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m333 | [0mexport type ReactNode = any;
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:347:16[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m347 | [0mconst logger = console.warn;
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:360:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m360 | [0mfunction show(what: unknown, mode?: string, max?: number): any {
   [0m[38;5;12m | [0m                                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x8.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:389:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m389 | [0m      .replace(/\x08/g, '\\x08') // backspace \b conflict with regex \b
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:390:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m390 | [0m      .replace(/\x0d\x0a/g, '\\x0d\\x0a') // CR/LF combo
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xa.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:391:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m391 | [0m      .replace(/\x0a/g, '\\x0a') // line feed
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:392:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m392 | [0m      .replace(/\x0d/g, '\\x0d') // carriage ret
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:450:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m450 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                         [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:450:41[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m450 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:471:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m471 | [0m      console.error(`EXCEPTION expectToBe [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:476:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m476 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:476:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m476 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-prototype-builtins][0m: [0m[1mAccess to Object.prototype.hasOwnProperty is not allowed from target object[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:501:7[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m501 | [0m    if (thing.hasOwnProperty(key)) {
   [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-prototype-builtins


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:539:33[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m539 | [0m    const jsonMap: Record<string, any> = { __instanceof: 'Map' };
   [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:558:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m558 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:558:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m558 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                                                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:564:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m564 | [0m      }, {} as Record<string, any>);
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:615:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m615 | [0mfunction strV(what?: any): string | undefined {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:658:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m658 | [0mfunction strJ(what?: any, indent = 2): string {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:665:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m665 | [0m      console.error(`EXCEPTION strJ`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:671:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m671 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:671:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m671 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:689:3[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m689 | [0m    console.error(`EXCEPTION expectToEqual [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:698:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m698 | [0m  desc = 'expectToMatch',
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:699:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m699 | [0m  times = 1,
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:700:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m700 | [0m  matchArray?: any,
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:815:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m815 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m816 | [0m  return {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m817 | [0m    not: {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m818 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m819 | [0m        expectNotToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m820 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m821 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m822 | [0m          `expect(${got}).not.toBe(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m823 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m824 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m825 | [0m      toHaveAttribute: (name: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m826 | [0m        const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m827 | [0m          .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m828 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m829 | [0m            return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m830 | [0m          });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m831 | [0m        if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m832 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m833 | [0m            attr.value === undefined ? 'not present' : undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m834 | [0m            attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m835 | [0m            `expect(${got}).not.toHaveAttribute(${name}) -- attribute ${name} exists`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m836 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m837 | [0m        } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m838 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m839 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m840 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m841 | [0m            `expect(${got}).not.toHaveAttribute(${name})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m842 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m843 | [0m        }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m844 | [0m      }, // .not.toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m845 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m846 | [0m        expectNotToMatch(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m847 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m848 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m849 | [0m          `expect(${got}).not.toMatch(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m850 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m851 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m852 | [0m    }, // .not.
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m853 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m854 | [0m      expectToBe(got, expected, `expect(${got}).toBe(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m855 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m856 | [0m    toHaveAttribute: (name: string, value: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m857 | [0m      const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m858 | [0m        .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m859 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m860 | [0m          return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m861 | [0m        });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m862 | [0m      if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m863 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m864 | [0m          attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m865 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m866 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value})'`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m867 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m868 | [0m      } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m869 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m870 | [0m          undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m871 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m872 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value}') -- attribute ${name} does not exist`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m873 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m874 | [0m      }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m875 | [0m    }, // .toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m876 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m877 | [0m      expectToMatch(expected, got, `expect(${got}).toMatch(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m878 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m879 | [0m  }; // return
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m880 | [0m} // expect()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:815:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m815 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:818:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m818 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:828:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m828 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:845:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m845 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:853:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m853 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:859:18[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m859 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:876:23[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m876 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:933:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m933 | [0m  | HTMLCollectionOf<any>
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:934:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m934 | [0m  | NodeListOf<any>
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:992:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m992 | [0mlet _LS = 'L'; // £ pound sterling UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:993:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m993 | [0mlet _EL = '_'; // … ellipsis UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:994:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m994 | [0mlet _LDQ = '\\'; // “ left quote (double) UTF8
   [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:995:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m995 | [0mlet _RDQ = '/'; // ” right quote (double) UTF8
   [0m[38;5;12m | [0m                   [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:997:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m997 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:997:71[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m997 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                                                                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1000:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1000 | [0m  _LS = '\xa3'; // £ pound sterling UTF8
    [0m[38;5;12m | [0m                   [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1001:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1001 | [0m  _EL = '\u2026'; // … ellipsis UTF8
    [0m[38;5;12m | [0m                     [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1002:22[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1002 | [0m  _LDQ = '\u201c'; // “ left quote (double) UTF8
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1003:22[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1003 | [0m  _RDQ = '\u201d'; // ” right quote (double) UTF8
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1006:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1006 | [0mexport const LS = _LS; // £ pound sterling UTF8
    [0m[38;5;12m | [0m                          [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1007:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1007 | [0mexport const EL = _EL; // … ellipsis UTF8
    [0m[38;5;12m | [0m                          [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1009:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1009 | [0mexport const LDQ = _LDQ; // “ left quote (double) UTF8
    [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1010:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1010 | [0mexport const RDQ = _RDQ; // ” right quote (double) UTF8
    [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x0.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1078:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1078 | [0m  /[\s\x00-\x20\u00a0\u202F\uFEFF\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u200B\u205F\u3000\u303F\xAD\u2010\u2011\u2027\uFE63\uFF0D]/g;
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1183:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1183 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1183:31[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1183 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1184:28[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1184 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1184:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1184 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1225:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1225 | [0mexport function trace(...args: any[]): void {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1227:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1227 | [0m    console.warn('TRACE', ...args);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1312:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1312 | [0mexport const mockWindowLocation = (brand = 'site', wnd?: Window): Window => {
    [0m[38;5;12m | [0m                                   [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1375:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1375 | [0m  where = 'LOG MOCK',
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1379:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1379 | [0m    console.warn(`logMock(${where}) MOCKED: ${fn.getMockName()}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1381:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1381 | [0m    console.warn(`logMock(${where}) NOT MOCKED: ${fn.name}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1442:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1442 | [0m    function checkIds(openTag: string, name: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1443 | [0m      if (name.indexOf(prefix) < 0 && !reAllowId.test(name)) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1444 | [0m        expect(`Found in element: ${openTag}`).toBe(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1445 | [0m          `Element with non-unique id="${name}" should contain our unique app id: ${prefix} for example: "${prefix}-${name}"`,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1446 | [0m        );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1447 | [0m      }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1448 | [0m      return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1449 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1539:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1539 | [0m        function replaceAttr(
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1540 | [0m          _unusedMatch: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1541 | [0m          name: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1542 | [0m          value: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1543 | [0m        ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1544 | [0m          if (name === 'title') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1545 | [0m            titles.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1546 | [0m              `expect(screen.queryByTitle(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1547 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1548 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1549 | [0m          } else if (name === 'aria-label') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1550 | [0m            labels.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1551 | [0m              `expect(screen.queryByLabelText(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1552 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1553 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1554 | [0m          } else if (name === 'value') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1555 | [0m            values.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1556 | [0m              `expect(screen.queryByDisplayValue(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1557 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1558 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1559 | [0m          }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1560 | [0m          return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1561 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1571:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1571 | [0m        function toRegex(_unusedFull: string, text: string) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1572 | [0m          const quoted = quotemeta(text.replace(reSpaceMarker, ''));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1573 | [0m          return quoted ? `/^\\s*${quoted}\\s*$/m` : 'BLANKBLANK';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1574 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1635:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1635 | [0m    } catch (_unused) {}
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1638:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1638 | [0m  } catch (_unused) {}
    [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1654:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1654 | [0m    function splitElementsAfter(_unused: string, after: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1655 | [0m      return `>${NL}${showSpaces(after, space)}`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1656 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1659:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1659 | [0m    function splitElementsBefore(_unused: string, before: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1660 | [0m      return `${showSpaces(before, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1661 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1664:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1664 | [0m    function splitElementsBetween(_unused: string, between: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1665 | [0m      return `>${NL}${showSpaces(between, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1666 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1682:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1682 | [0m  return text.replace(/\s/g, function replacespace(match) {
    [0m[38;5;12m | [0m                             [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1683 | [0m    return match === '\n' ? match : space;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1684 | [0m  });
    [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1700:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1700 | [0m    function replaceOuterSpaces(
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1701 | [0m      _unused: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1702 | [0m      leading: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1703 | [0m      middle: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1704 | [0m      trailing: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1705 | [0m    ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1706 | [0m      return (replaceSpaces(leading, space) + middle +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1707 | [0m        replaceSpaces(trailing, space));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1708 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1804:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1804 | [0mfunction padHex(value: number, max = 2) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1805 | [0m  //return value.toString(16).padStart(max, '0'); // if ES6 supported
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1806 | [0m  const val = value.toString(16);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1807 | [0m  return '0000000000000000'.substring(0, max - val.length) + val;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1808 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1931:26[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1931 | [0m      .replace(reStyleAttr, function replaceStyles(_unused, styles) {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1932 | [0m        return `styles="\n${TAB}${TAB}${
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1933 | [0m          styles
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1934 | [0m            .replace(reEndingSemi, '')
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1935 | [0m            .split(reSemiSpaces)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1936 | [0m            .join(`;\n${TAB}${TAB}`)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1937 | [0m        }\n${TAB}"`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1938 | [0m      }).replace(reBlankLines, '\n\n') // remove excess newlines
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:1960:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1960 | [0m        function replaceAttribute(_unused, attr, value) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1961 | [0m          let show = reAttrsToShow.test(attr);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1962 | [0m          show = FLIP ? !show : show;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1963 | [0m          return show ? `\n${TAB}${TAB}${attr}=${value}` : '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1964 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2095:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2095 | [0m      function replaceIndexing(_unused, idx, levels, list) {
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2096 | [0m        if (idx) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2097 | [0m          index = parseInt(idx, 10);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2098 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2099 | [0m        if (levels) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2100 | [0m          up = levels.length;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2101 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2102 | [0m        if (list) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2103 | [0m          dumpList = true;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2104 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2105 | [0m        return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2106 | [0m      },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2204:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2204 | [0m      console.warn(
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2295:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2295 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2296 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2297 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2298 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2295:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2295 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2296 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2297 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2298 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2304:118[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2304 | [0m * @param ellipsis {string} value to use when limit is positive and entries are elided from the output. defaults to '…'.
    [0m[38;5;12m | [0m                                                                                                                     [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2334:141[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2334 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2334:146[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2334 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                                  [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2463:38[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2463 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2463:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2463 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                             [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2470:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2470 | [0m      for (const key of (thing as Set<any>).keys()) {
    [0m[38;5;12m | [0m                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2538:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2538 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2538:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2538 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2566:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2566 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2566:42[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2566 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                         [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2590:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2590 | [0m      console.warn(firstDump.elementSources);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2617:52[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2617 | [0m    const targetKey = (Object.keys(element || {}) as any).find((
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2638:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2638 | [0m    console.warn(`Exception getElementInfo[${exception}]`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2643:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2643 | [0m        showThing(element, void 0, true)
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2666:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2666 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                          [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2666:35[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2666 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2684:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2684 | [0m      console.warn(`EXCEPTION showEvent#show[${exception}]`);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2727:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2727 | [0m        showVal('details'), // TODO details???
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:2752:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2752 | [0m      // TODO view(null)
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:3450:23[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m3450 | [0m  const expectMatches: any = ['   [5] @LIST ', '5', '', '@LIST'];
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-regex-spaces][0m: [0m[1mmore than one consecutive spaces in RegExp is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4464:24[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4464 | [0mconst reRegexSpaces2 = /\bregex \tand\nspaces   \u1999/gm;
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-regex-spaces


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4515:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4515 | [0mconsole.log(`ES6 MAP DEF`); // ENABLE Map
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4525:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4525 | [0mconst jsonAll: any = {
    [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4563:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4563 | [0mconst expectJson: any = {
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4870:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4870 | [0mexpectToBe(strV(false), undefined, 'strV(false) should answer undefined');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4922:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4922 | [0m  strV(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4939:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4939 | [0mconst endlessObj: any = {};
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:4951:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4951 | [0mconsole.log('ES6 MAP TESTS'); // ENABLE Map
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5019:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5019 | [0mconst jss = (what: any) => JSON.stringify(what, jsonKeySorter);
    [0m[38;5;12m | [0m                   [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5053:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5053 | [0mexpectToBe(strJ(false), 'false', 'strJ(false) should show as unquoted');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5084:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5084 | [0m  strJ(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5233:30[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5233 | [0m    '_____got': 'al;kskdj;w;lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                               [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5234:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5234 | [0m    'diffStart': 'lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                     [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5241:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5241 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: ` ` is \u{2000} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5241:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5241 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                       [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5438:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5438 | [0m  console.warn(`NOT OK FAILL:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5527:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5527 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5528:47[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5528 | [0mdocument.getElementsByClassName = () => [] as any;
    [0m[38;5;12m | [0m                                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5581:55[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5581 | [0mdocument.querySelectorAll = () => [div, div, span] as any;
    [0m[38;5;12m | [0m                                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5728:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5728 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5729:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5729 | [0mdocument.getElementById = () => openId as any;
    [0m[38;5;12m | [0m                                          [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5730:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5730 | [0mdocument.getElementsByClassName = () => [openId] as any;
    [0m[38;5;12m | [0m                                                    [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5926:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5926 | [0m  console.warn(`\ngetHtml: `, html);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5927:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5927 | [0m  console.warn(`\ngetHtmlNice: `, getHtmlNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5928:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5928 | [0m  console.warn(`\ngetTextNice: `, getTextNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5971:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5971 | [0m  console.warn(`NOT OK FAILN:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5981:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5981 | [0m  console.warn(`NOT OK FAILO1: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5983:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5983 | [0m  console.warn(`NOT OK FAILO2:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5985:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5985 | [0m  console.warn(`NOT OK FAILO3: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5987:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5987 | [0m  console.warn(`NOT OK FAILO4:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5989:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5989 | [0m  console.warn(`NOT OK FAILO5: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5991:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5991 | [0m  console.warn(`NOT OK FAILO6:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5993:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5993 | [0m  console.warn(`NOT OK FAILO7:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5995:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5995 | [0m  console.warn(`NOT OK FAILO8:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:5997:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5997 | [0m  console.warn(`NOT OK FAILO9:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6051:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6051 | [0m  console.warn(`NOT OK FAILP1: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6053:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6053 | [0m  console.warn(`NOT OK FAILP2: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6087:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6087 | [0m  getTypeName(true),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6338:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6338 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6338:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6338 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6383:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6383 | [0mexpectToBe(str(false), 'false', 'str(false) should return string false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6491:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6491 | [0m  showThing(false, 12),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:6619:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6619 | [0m  showThing(false, 2),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tsrunner.ts[0m[0m[33m:7096:15[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m7096 | [0mconst elDump: any = {
    [0m[38;5;12m | [0m              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
 [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5:12[0m
 [0m[38;5;12m | [0m
[0m[38;5;12m5 | [0mconst win: any = {
 [0m[38;5;12m | [0m           [0m[1m[31m^^^[0m
  [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
  [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:86:34[0m
  [0m[38;5;12m | [0m
[0m[38;5;12m86 | [0m  const thing = getGlobal(bun) as any;
  [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
   [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:108:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m108 | [0m  const thing = getGlobal(deno) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:130:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m130 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:154:35[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m154 | [0m  const thing = getGlobal(node) as any;
   [0m[38;5;12m | [0m                                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:225:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m225 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:228:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m228 | [0mconsole.warn(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:261:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m261 | [0mexport const describe = () => {};
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:263:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m263 | [0mexport const test = () => {};
   [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:271:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m271 | [0mexport const jest: any = {};
   [0m[38;5;12m | [0m                   [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:285:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m285 | [0mexport const uev: any = {};
   [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:290:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m290 | [0mfunction mockScreen() {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m291 | [0m  const screen = {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m292 | [0m    queryAllByAltText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m293 | [0m    queryAllByDisplayValue: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m294 | [0m    queryAllByLabelText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m295 | [0m    queryAllByPlaceholderText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m296 | [0m    queryAllByRole: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m297 | [0m    queryAllByTestId: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m298 | [0m    queryAllByText: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m299 | [0m    queryAllByTitle: noEls,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m300 | [0m  };
   [0m[38;5;12m | [0m[0m[1m[31m^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m301 | [0m  return screen;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m302 | [0m} // mockScreen()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-namespace][0m: [0m[1mTypeScript's `module` and `namespace` are discouraged to
use[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:306:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m306 | [0mnamespace React {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m307 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m308 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m309 | [0m  export type Dispatch<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m310 | [0m  export type SetStateAction<T> = (value: T) => void;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m311 | [0m}
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use ES2015 module syntax (`import`/`export`) to organize
the code instead

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-namespace


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:307:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m307 | [0m  export type ReactElement = any;
   [0m[38;5;12m | [0m                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:308:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m308 | [0m  export type ReactNode = any;
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:312:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m312 | [0mexport type ReactElement = any;
   [0m[38;5;12m | [0m                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:313:25[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m313 | [0mexport type ReactNode = any;
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:327:16[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m327 | [0mconst logger = console.warn;
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:340:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m340 | [0mfunction show(what: unknown, mode?: string, max?: number): any {
   [0m[38;5;12m | [0m                                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x8.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:369:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m369 | [0m      .replace(/\x08/g, '\\x08') // backspace \b conflict with regex \b
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:370:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m370 | [0m      .replace(/\x0d\x0a/g, '\\x0d\\x0a') // CR/LF combo
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xa.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:371:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m371 | [0m      .replace(/\x0a/g, '\\x0a') // line feed
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \xd.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:372:13[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m372 | [0m      .replace(/\x0d/g, '\\x0d') // carriage ret
   [0m[38;5;12m | [0m               [0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:430:26[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m430 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                         [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:430:41[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m430 | [0mfunction expectToBe(got: any, expected: any, desc = 'expectToBe'): void {
   [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:451:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m451 | [0m      console.error(`EXCEPTION expectToBe [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:456:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m456 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:456:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m456 | [0mfunction expectNotToBe(got: any, expected: any, desc = 'expectNotToBe'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-prototype-builtins][0m: [0m[1mAccess to Object.prototype.hasOwnProperty is not allowed from target object[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:481:7[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m481 | [0m    if (thing.hasOwnProperty(key)) {
   [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-prototype-builtins


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:519:33[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m519 | [0m    const jsonMap: Record<string, any> = { __instanceof: 'Map' };
   [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:538:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m538 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:538:60[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m538 | [0m    const val: Record<string, any> = value as Record<string, any>;
   [0m[38;5;12m | [0m                                                             [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:544:28[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m544 | [0m      }, {} as Record<string, any>);
   [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:595:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m595 | [0mfunction strV(what?: any): string | undefined {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:638:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m638 | [0mfunction strJ(what?: any, indent = 2): string {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:645:4[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m645 | [0m      console.error(`EXCEPTION strJ`, exception);
   [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:651:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m651 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:651:44[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m651 | [0mfunction expectToEqual(got: any, expected: any, desc = 'expectToEqual'): void {
   [0m[38;5;12m | [0m                                           [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:669:3[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m669 | [0m    console.error(`EXCEPTION expectToEqual [${desc}]:\x20`, exception);
   [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:678:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m678 | [0m  desc = 'expectToMatch',
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:679:2[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m679 | [0m  times = 1,
   [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:680:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m680 | [0m  matchArray?: any,
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:795:1[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m795 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m796 | [0m  return {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m797 | [0m    not: {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m798 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m799 | [0m        expectNotToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m800 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m801 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m802 | [0m          `expect(${got}).not.toBe(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m803 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m804 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m805 | [0m      toHaveAttribute: (name: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m806 | [0m        const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m807 | [0m          .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m808 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m809 | [0m            return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m810 | [0m          });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m811 | [0m        if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m812 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m813 | [0m            attr.value === undefined ? 'not present' : undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m814 | [0m            attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m815 | [0m            `expect(${got}).not.toHaveAttribute(${name}) -- attribute ${name} exists`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m816 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m817 | [0m        } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m818 | [0m          expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m819 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m820 | [0m            undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m821 | [0m            `expect(${got}).not.toHaveAttribute(${name})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m822 | [0m          );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m823 | [0m        }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m824 | [0m      }, // .not.toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m825 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m826 | [0m        expectNotToMatch(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m827 | [0m          expected,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m828 | [0m          got,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m829 | [0m          `expect(${got}).not.toMatch(${expected})`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m830 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m831 | [0m      },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m832 | [0m    }, // .not.
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m833 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m834 | [0m      expectToBe(got, expected, `expect(${got}).toBe(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m835 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m836 | [0m    toHaveAttribute: (name: string, value: string) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m837 | [0m      const attr = got
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m838 | [0m        .attributes
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m839 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m840 | [0m          return attr.name === name;
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m841 | [0m        });
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m842 | [0m      if (attr) {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m843 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m844 | [0m          attr.value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m845 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m846 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value})'`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m847 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m848 | [0m      } else {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m849 | [0m        expectToBe(
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m850 | [0m          undefined,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m851 | [0m          value,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m852 | [0m          `expect(${got}).toHaveAttribute(${name}, '${value}') -- attribute ${name} does not exist`,
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m853 | [0m        );
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m854 | [0m      }
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m855 | [0m    }, // .toHaveAttribute()
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m856 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m857 | [0m      expectToMatch(expected, got, `expect(${got}).toMatch(${expected})`);
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m858 | [0m    },
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m859 | [0m  }; // return
   [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m860 | [0m} // expect()
   [0m[38;5;12m | [0m[0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:795:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m795 | [0mfunction expect(got: any) {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:798:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m798 | [0m      toBe: (expected: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:808:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m808 | [0m          .find((attr: any) => {
   [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:825:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m825 | [0m      toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                          [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:833:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m833 | [0m    toBe: (expected: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:839:18[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m839 | [0m        .find((attr: any) => {
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:856:23[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m856 | [0m    toMatch: (expected: any) => {
   [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:913:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m913 | [0m  | HTMLCollectionOf<any>
   [0m[38;5;12m | [0m                     [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:914:15[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m914 | [0m  | NodeListOf<any>
   [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:972:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m972 | [0mlet _LS = 'L'; // £ pound sterling UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:973:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m973 | [0mlet _EL = '_'; // … ellipsis UTF8
   [0m[38;5;12m | [0m                  [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:974:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m974 | [0mlet _LDQ = '\\'; // “ left quote (double) UTF8
   [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:975:20[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m975 | [0mlet _RDQ = '/'; // ” right quote (double) UTF8
   [0m[38;5;12m | [0m                   [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:977:24[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m977 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:977:71[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m977 | [0m// let _LDQ = '"('; // “ left quote (double) UTF8 let _RDQ = ')"'; // ” right
   [0m[38;5;12m | [0m                                                                       [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:980:19[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m980 | [0m  _LS = '\xa3'; // £ pound sterling UTF8
   [0m[38;5;12m | [0m                   [0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:981:21[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m981 | [0m  _EL = '\u2026'; // … ellipsis UTF8
   [0m[38;5;12m | [0m                     [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:982:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m982 | [0m  _LDQ = '\u201c'; // “ left quote (double) UTF8
   [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:983:22[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m983 | [0m  _RDQ = '\u201d'; // ” right quote (double) UTF8
   [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:986:27[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m986 | [0mexport const LS = _LS; // £ pound sterling UTF8
   [0m[38;5;12m | [0m                          [0m[1m[31m^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `£` is \u{00a3} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:987:27[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m987 | [0mexport const EL = _EL; // … ellipsis UTF8
   [0m[38;5;12m | [0m                          [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:989:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m989 | [0mexport const LDQ = _LDQ; // “ left quote (double) UTF8
   [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `“` is \u{201c} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
   [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:990:29[0m
   [0m[38;5;12m | [0m
[0m[38;5;12m990 | [0mexport const RDQ = _RDQ; // ” right quote (double) UTF8
   [0m[38;5;12m | [0m                            [0m[1m[31m^^[0m
    [0m[38;5;12m=[0m [0m[1mhint[0m: `”` is \u{201d} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-control-regex][0m: [0m[1mUnexpected control character(s) in regular expression: \x0.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1058:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1058 | [0m  /[\s\x00-\x20\u00a0\u202F\uFEFF\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u200B\u205F\u3000\u303F\xAD\u2010\u2011\u2027\uFE63\uFF0D]/g;
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Disable the rule if the control character (\x... or \u00..) was intentional, otherwise rework your RegExp

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-control-regex


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1163:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1163 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1163:31[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1163 | [0mfunction objValues(obj: any): any[] {
    [0m[38;5;12m | [0m                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1164:28[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1164 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1164:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1164 | [0m  const values = (Object as any).values ? (Object as any).values(obj) : Object
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1205:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1205 | [0mexport function trace(...args: any[]): void {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1207:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1207 | [0m    console.warn('TRACE', ...args);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1292:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1292 | [0mexport const mockWindowLocation = (brand = 'site', wnd?: Window): Window => {
    [0m[38;5;12m | [0m                                   [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[default-param-last][0m: [0m[1mdefault parameters should be at last[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1355:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1355 | [0m  where = 'LOG MOCK',
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Modify the signatures to move default parameter(s) to the end

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/default-param-last


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1359:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1359 | [0m    console.warn(`logMock(${where}) MOCKED: ${fn.getMockName()}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1361:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1361 | [0m    console.warn(`logMock(${where}) NOT MOCKED: ${fn.name}`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1422:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1422 | [0m    function checkIds(openTag: string, name: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1423 | [0m      if (name.indexOf(prefix) < 0 && !reAllowId.test(name)) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1424 | [0m        expect(`Found in element: ${openTag}`).toBe(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1425 | [0m          `Element with non-unique id="${name}" should contain our unique app id: ${prefix} for example: "${prefix}-${name}"`,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1426 | [0m        );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1427 | [0m      }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1428 | [0m      return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1429 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1519:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1519 | [0m        function replaceAttr(
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1520 | [0m          _unusedMatch: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1521 | [0m          name: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1522 | [0m          value: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1523 | [0m        ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1524 | [0m          if (name === 'title') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1525 | [0m            titles.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1526 | [0m              `expect(screen.queryByTitle(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1527 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1528 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1529 | [0m          } else if (name === 'aria-label') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1530 | [0m            labels.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1531 | [0m              `expect(screen.queryByLabelText(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1532 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1533 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1534 | [0m          } else if (name === 'value') {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1535 | [0m            values.push(
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1536 | [0m              `expect(screen.queryByDisplayValue(` + value +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1537 | [0m                ')).toBeInTheDocument();\n',
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1538 | [0m            );
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1539 | [0m          }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1540 | [0m          return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1541 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1551:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1551 | [0m        function toRegex(_unusedFull: string, text: string) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1552 | [0m          const quoted = quotemeta(text.replace(reSpaceMarker, ''));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1553 | [0m          return quoted ? `/^\\s*${quoted}\\s*$/m` : 'BLANKBLANK';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1554 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1615:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1615 | [0m    } catch (_unused) {}
    [0m[38;5;12m | [0m                      [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[no-empty][0m: [0m[1mEmpty block statement[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1618:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1618 | [0m  } catch (_unused) {}
    [0m[38;5;12m | [0m                    [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add code or comment to the empty block

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-empty


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1634:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1634 | [0m    function splitElementsAfter(_unused: string, after: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1635 | [0m      return `>${NL}${showSpaces(after, space)}`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1636 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1639:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1639 | [0m    function splitElementsBefore(_unused: string, before: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1640 | [0m      return `${showSpaces(before, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1641 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1644:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1644 | [0m    function splitElementsBetween(_unused: string, between: string) {
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1645 | [0m      return `>${NL}${showSpaces(between, space)}${NL}<`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1646 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1662:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1662 | [0m  return text.replace(/\s/g, function replacespace(match) {
    [0m[38;5;12m | [0m                             [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1663 | [0m    return match === '\n' ? match : space;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1664 | [0m  });
    [0m[38;5;12m | [0m[0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1680:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1680 | [0m    function replaceOuterSpaces(
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1681 | [0m      _unused: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1682 | [0m      leading: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1683 | [0m      middle: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1684 | [0m      trailing: string,
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1685 | [0m    ) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1686 | [0m      return (replaceSpaces(leading, space) + middle +
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1687 | [0m        replaceSpaces(trailing, space));
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1688 | [0m    },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1784:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1784 | [0mfunction padHex(value: number, max = 2) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1785 | [0m  //return value.toString(16).padStart(max, '0'); // if ES6 supported
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1786 | [0m  const val = value.toString(16);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1787 | [0m  return '0000000000000000'.substring(0, max - val.length) + val;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1788 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1911:26[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1911 | [0m      .replace(reStyleAttr, function replaceStyles(_unused, styles) {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1912 | [0m        return `styles="\n${TAB}${TAB}${
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1913 | [0m          styles
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1914 | [0m            .replace(reEndingSemi, '')
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1915 | [0m            .split(reSemiSpaces)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1916 | [0m            .join(`;\n${TAB}${TAB}`)
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1917 | [0m        }\n${TAB}"`;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1918 | [0m      }).replace(reBlankLines, '\n\n') // remove excess newlines
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:1940:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1940 | [0m        function replaceAttribute(_unused, attr, value) {
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1941 | [0m          let show = reAttrsToShow.test(attr);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1942 | [0m          show = FLIP ? !show : show;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1943 | [0m          return show ? `\n${TAB}${TAB}${attr}=${value}` : '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m1944 | [0m        },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2075:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2075 | [0m      function replaceIndexing(_unused, idx, levels, list) {
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2076 | [0m        if (idx) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2077 | [0m          index = parseInt(idx, 10);
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2078 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2079 | [0m        if (levels) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2080 | [0m          up = levels.length;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2081 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2082 | [0m        if (list) {
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2083 | [0m          dumpList = true;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2084 | [0m        }
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2085 | [0m        return '';
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2086 | [0m      },
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2184:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2184 | [0m      console.warn(
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2275:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2275 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2276 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2277 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2278 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2275:8[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2275 | [0mexport function enquote(text: string, quotes = 'lrdq') {
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2276 | [0m  quotes = quotesMap[quotes] || quotes;
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2277 | [0m  return quotes[0] + text + quotes[quotes.length - 1];
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2278 | [0m}
    [0m[38;5;12m | [0m[0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2284:118[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2284 | [0m * @param ellipsis {string} value to use when limit is positive and entries are elided from the output. defaults to '…'.
    [0m[38;5;12m | [0m                                                                                                                     [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2314:141[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2314 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                            [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2314:146[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2314 | [0m * @param ellipsis {MapEllipsis | null} key/value tuple to use when limit is positive and entries are elided from the output. defaults to ['…', '…']. If null, defaults to showing nothing.
    [0m[38;5;12m | [0m                                                                                                                                                  [0m[1m[31m^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `…` is \u{2026} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2443:38[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2443 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2443:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2443 | [0m      for (const entry of (thing as Map<any, any>).entries()) {
    [0m[38;5;12m | [0m                                             [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2450:36[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2450 | [0m      for (const key of (thing as Set<any>).keys()) {
    [0m[38;5;12m | [0m                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2518:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2518 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                    [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2518:29[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2518 | [0mexport function has(value?: any): string | boolean | number | object {
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2546:32[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2546 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                               [0m[1m[31m^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2546:42[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2546 | [0mexport function getElementInfo(element?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                         [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2570:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2570 | [0m      console.warn(firstDump.elementSources);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2597:52[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2597 | [0m    const targetKey = (Object.keys(element || {}) as any).find((
    [0m[38;5;12m | [0m                                                     [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2618:3[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2618 | [0m    console.warn(`Exception getElementInfo[${exception}]`);
    [0m[38;5;12m | [0m    [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2623:5[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2623 | [0m        showThing(element, void 0, true)
    [0m[38;5;12m | [0m        [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-module-boundary-types][0m: [0m[1mAll arguments should be typed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2646:27[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2646 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                          [0m[1m[31m^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add types to all the function arguments

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-module-boundary-types


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2646:35[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2646 | [0mexport function showEvent(event?: any, prefix = ''): string {
    [0m[38;5;12m | [0m                                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2664:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2664 | [0m      console.warn(`EXCEPTION showEvent#show[${exception}]`);
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2707:25[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2707 | [0m        showVal('details'), // TODO details???
    [0m[38;5;12m | [0m                            [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[ban-untagged-todo][0m: [0m[1mTODO should be tagged with (@username) or (#issue)[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:2732:4[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m2732 | [0m      // TODO view(null)
    [0m[38;5;12m | [0m      [0m[1m[31m^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a user tag or issue reference to the TODO comment, e.g. TODO(@djones), TODO(djones), TODO(#123)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/ban-untagged-todo


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:3430:23[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m3430 | [0m  const expectMatches: any = ['   [5] @LIST ', '5', '', '@LIST'];
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-regex-spaces][0m: [0m[1mmore than one consecutive spaces in RegExp is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4444:24[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4444 | [0mconst reRegexSpaces2 = /\bregex \tand\nspaces   \u1999/gm;
    [0m[38;5;12m | [0m                       [0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-regex-spaces


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4495:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4495 | [0mconsole.log(`ES6 MAP DEF`); // ENABLE Map
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4505:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4505 | [0mconst jsonAll: any = {
    [0m[38;5;12m | [0m               [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4543:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4543 | [0mconst expectJson: any = {
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4850:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4850 | [0mexpectToBe(strV(false), undefined, 'strV(false) should answer undefined');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4902:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4902 | [0m  strV(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4919:19[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4919 | [0mconst endlessObj: any = {};
    [0m[38;5;12m | [0m                  [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4931:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4931 | [0mconsole.log('ES6 MAP TESTS'); // ENABLE Map
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:4999:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m4999 | [0mconst jss = (what: any) => JSON.stringify(what, jsonKeySorter);
    [0m[38;5;12m | [0m                   [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5033:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5033 | [0mexpectToBe(strJ(false), 'false', 'strJ(false) should show as unquoted');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[explicit-function-return-type][0m: [0m[1mMissing return type on function[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5064:7[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5064 | [0m  strJ(function () {}),
    [0m[38;5;12m | [0m       [0m[1m[31m^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Add a return type to the function signature

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/explicit-function-return-type


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5213:30[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5213 | [0m    '_____got': 'al;kskdj;w;lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                               [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5214:20[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5214 | [0m    'diffStart': 'lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n  ',
    [0m[38;5;12m | [0m                     [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5221:16[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5221 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                  [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: ` ` is \u{2000} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[prefer-ascii][0m: [0m[1mNon-ASCII characters are not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5221:21[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5221 | [0m      'al;kskdj;w;  lj ᦙ  \r \f \n \r \t \x20 \r\n \u000b \n     ',
    [0m[38;5;12m | [0m                       [0m[1m[31m^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: `ᦙ` is \u{1999} and this is not an ASCII. Consider replacing it with an ASCII character

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/prefer-ascii


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5418:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5418 | [0m  console.warn(`NOT OK FAILL:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5507:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5507 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5508:47[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5508 | [0mdocument.getElementsByClassName = () => [] as any;
    [0m[38;5;12m | [0m                                              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5561:55[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5561 | [0mdocument.querySelectorAll = () => [div, div, span] as any;
    [0m[38;5;12m | [0m                                                      [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5708:41[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5708 | [0mdocument.querySelectorAll = () => [] as any;
    [0m[38;5;12m | [0m                                        [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5709:43[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5709 | [0mdocument.getElementById = () => openId as any;
    [0m[38;5;12m | [0m                                          [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5710:53[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5710 | [0mdocument.getElementsByClassName = () => [openId] as any;
    [0m[38;5;12m | [0m                                                    [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5906:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5906 | [0m  console.warn(`\ngetHtml: `, html);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5907:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5907 | [0m  console.warn(`\ngetHtmlNice: `, getHtmlNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5908:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5908 | [0m  console.warn(`\ngetTextNice: `, getTextNice(rawHtmlNoNL));
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5951:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5951 | [0m  console.warn(`NOT OK FAILN:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5961:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5961 | [0m  console.warn(`NOT OK FAILO1: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5963:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5963 | [0m  console.warn(`NOT OK FAILO2:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5965:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5965 | [0m  console.warn(`NOT OK FAILO3: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5967:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5967 | [0m  console.warn(`NOT OK FAILO4:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5969:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5969 | [0m  console.warn(`NOT OK FAILO5: 2 faillures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5971:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5971 | [0m  console.warn(`NOT OK FAILO6:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5973:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5973 | [0m  console.warn(`NOT OK FAILO7:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5975:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5975 | [0m  console.warn(`NOT OK FAILO8:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:5977:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m5977 | [0m  console.warn(`NOT OK FAILO9:`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6031:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6031 | [0m  console.warn(`NOT OK FAILP1: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-console][0m: [0m[1m`console` usage is not allowed.[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6033:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6033 | [0m  console.warn(`NOT OK FAILP2: 2 failures`);
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^[0m

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-console


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6067:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6067 | [0m  getTypeName(true),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6318:1[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6318 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m[0m[1m[31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6318:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6318 | [0mexpectToBe(has(false), false, 'has(false) should return boolean false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6363:12[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6363 | [0mexpectToBe(str(false), 'false', 'str(false) should return string false');
    [0m[38;5;12m | [0m           [0m[1m[31m^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6471:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6471 | [0m  showThing(false, 12),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-boolean-literal-for-arguments][0m: [0m[1mPlease create a self-documenting constant instead of passing plain booleans values as arguments[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:6599:2[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m6599 | [0m  showThing(false, 2),
    [0m[38;5;12m | [0m  [0m[1m[31m^^^^^^^^^^^^^^^^^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: const ARG_ONE = true, ARG_TWO = false;
yourFunction(ARG_ONE, ARG_TWO)

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-boolean-literal-for-arguments


[0m[1m[31merror[no-explicit-any][0m: [0m[1m`any` type is not allowed[0m
    [0m[38;5;12m-->[0m [0m[36m/home/me/dell/home/me/workspace/play/bsac-linux-cfg/bin/template/typescript/react-tools-ts/src/tslangorg.ts[0m[0m[33m:7076:15[0m
    [0m[38;5;12m | [0m
[0m[38;5;12m7076 | [0mconst elDump: any = {
    [0m[38;5;12m | [0m              [0m[1m[31m^^^[0m
     [0m[38;5;12m=[0m [0m[1mhint[0m: Use a specific type other than `any`

  [0m[38;5;12mdocs[0m: https://docs.deno.com/lint/rules/no-explicit-any


Found 568 problems[0m[38;5;245m (8 fixable via --fix)[0m
Checked 10 files
