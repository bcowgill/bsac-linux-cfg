// weird.d.ts - system.es5
declare module "weird" {
    export function FWeird(value: any): void;
    export class CWeird {
        name: string;
        protected prot: string;
        private priv;
        static readonly klass: string;
        readonly description: string;
        constructor(name: string, prot?: string, priv?: string);
        static statics(): void;
        whatever(): void;
        publics(): void;
        private privates();
        protected protecteds(): void;
    }
}
 
// weird.js - system.es5
System.register("weird", [], function (exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    function FWeird(value) {
        console.log('FWeird was called', value);
    }
    exports_1("FWeird", FWeird);
    var CWeird, iWeird;
    return {
        setters: [],
        execute: function () {
            CWeird = (function () {
                function CWeird(name, prot, priv) {
                    if (prot === void 0) { prot = 'protected string'; }
                    if (priv === void 0) { priv = 'private string'; }
                    this.name = name;
                    this.prot = prot;
                    this.priv = priv;
                    console.log("CWeird constructor(" + name + ")");
                    this.description = "I am " + name + " and I keep " + this.priv + " a secret but share " + this.prot + " with friends";
                }
                CWeird.statics = function () {
                    console.log(CWeird.klass + " statics called");
                };
                CWeird.prototype.whatever = function () {
                    console.log(this.name + " whatever called");
                };
                CWeird.prototype.publics = function () {
                    console.log(this.name + " publics called");
                    this.protecteds();
                };
                CWeird.prototype.privates = function () {
                    console.log(this.name + " privates called");
                };
                CWeird.prototype.protecteds = function () {
                    console.log(this.name + " protecteds called");
                    this.privates();
                };
                return CWeird;
            }());
            CWeird.klass = 'CWeird';
            exports_1("CWeird", CWeird);
            iWeird = new CWeird('bill');
            iWeird.publics();
            // iWeird.description = 'time cannot change me';  // read only, cannot
            // iWeird.protecteds(); // not accessible from instance
            // iWeird.privates(); // not accessible from instance
            console.log(CWeird.klass);
            CWeird.statics();
            // iWeird.statics(); // not an instance method
            // CWeird.klass = 'not allowed'; // read only, cannot
            FWeird(void 0);
        }
    };
});
//# sourceMappingURL=index-debug.js.map