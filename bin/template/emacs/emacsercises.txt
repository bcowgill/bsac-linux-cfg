Emacs Exercises to achieve mastery.

Each exercise begins within a equal sign boundary for easy searching.

1 ==========================================================================

Emacsercise number 1 movin' it one character at a time.

Follow the trail of letters using single character motion commands.
(don't cheat with the arrow keys.)

 p     C-p up to previous line
b f    C-n down to next line
 n     C-b left, backward one char
       C-f right, forward one char

START -> ffffffffffn    ffffn  fffn  fffn  fffn  fffn  fffn  fffn  fffn .
         p         n    p   n  p  n  p  n  p  n  p  n  p  n  p  n  p  n .
         p    fffffnffffn   fffp  fffp  fffp  fffp  fffp  fffp  fffp  n .
         p    p    n    n                                             n .
         p    p    n    n   nbbb  nbbb  nbbb  nbbb  nbbb  nbbb  nbbb  n .
         pbbbbbbbbbb    n   n  p  n  p  n  p  n  p  n  p  n  p  n  p  n .
              p         n   n  pbbb  pbbb  pbbb  pbbb  pbbb  pbbb  pbbb .
              p         n   n                                           .
              bbbbbbbbbbb   nfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfnfn .
                            npnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpn .
                            npnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpnpn .
                            fpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpfpn .
                                                                      ^ .
                                                                      E .
                                                                      N .
                                                                      D .

2 ==========================================================================

Emacsercise #2 movin' it with bigger jumps

In the text below move to the uppercased words and then back to the start
using specific movement commands. Repeat each line several times.
Experiment with what word, sentence or paragraph means in other file types
like HTML, lisp, programming lanugages.

	A-f    forward to just after end of word
	A-b    backward to start of word
	C-e    end of the line
	C-a    at beginning of the line
	A-m    move to first non-space on line
	A-e    end of sentence (just after full stop)
	A-a    at start of sentence
	A-}    forward to just after the paragaph
	A-{    backward to just before the paragraph
	C-A-f    forward to just after this/next symbolic expression
	C-A-b    backward to beginning of this/previous symbolic expression

START -> WORD WORD WORD WORD WORD WORD WORD WORD WORD WORD reverse to start

ENDLINE not end of sentence.  not end of sentence.  not end sentence.  HOME

       ENDLINE not end of sentence.  not end of sentence. back to INDENT

go by SENTENCE.  to next SENTENCE.  jump to SENTENCE.  go to SENTENCE.  go
to SENTENCE.  to next SENTENCE.  go by SENTENCE.  reverse by SENTENCE.

go by PARAGRAPH.  then by SENTENCE when you return.

The unanimous Declaration of the thirteen united States of America,

When in the Course of human events, it becomes necessary for one people to
dissolve the political bands which have connected them with another, and to
assume among the powers of the earth, the separate and equal station to
which the Laws of Nature and of Nature's God entitle them, a decent respect
to the opinions of mankind requires that they should declare the causes
which impel them to the separation.

We hold these truths to be self-evident, that all men are created equal,
that they are endowed by their Creator with certain unalienable Rights, that
among these are Life, Liberty and the pursuit of Happiness.  --That to
secure these rights, Governments are instituted among Men, deriving their
just powers from the consent of the governed, --That whenever any Form of
Government becomes destructive of these ends, it is the Right of the People
to alter or to abolish it, and to institute new Government, laying its
foundation on such principles and organizing its powers in such form, as to
them shall seem most likely to effect their Safety and Happiness.

Prudence, indeed, will dictate that Governments long established should not
be changed for light and transient causes; and accordingly all experience
hath shewn, that mankind are more disposed to suffer, while evils are
sufferable, than to right themselves by abolishing the forms to which they
are accustomed.  But when a long train of abuses and usurpations, pursuing
invariably the same Object evinces a design to reduce them under absolute
Despotism, it is their right, it is their duty, to throw off such
Government, and to provide new Guards for their future security.

--Such has been the patient sufferance of these Colonies; and such is now
the necessity which constrains them to alter their former Systems of
Government.  The history of the present King of Great Britain is a history
of repeated injuries and usurpations, all having in direct object the
establishment of an absolute Tyranny over these States.  To prove this, let
Facts be submitted to a candid world.

go back by PARAGRAPH.  then back by SENTENCE when you return.

go forward and backward by symbolic expression on the following code block
or open your own source code files and try it there.

(point) (point)
(point) (point) (point)

if (condition)
{
    doit()
}
else
{
    dothat()
}

for (x=1; x<5; x++) {
    goforit()
}

<div><p>stuff <b>is </b>bold</p></div>

function that (x, y) {
	try {
	    do()
	}
	catch (error)
	{
	    var x = [1, 2, 3, 4];
	    oops()
	}
	finally
	{
	    done()
	}
}


3 ==========================================================================

Emacsercise #3 movin' and shakin' it around

First save this cursor position to register 0 with C-x r Space 0
then you can return here with C-x r j 0

	C-x r Space 0    save current point to register 0
	C-x r j 0    jump back to point in register 0
	C-v    scroll document up one page (only moves cursor point if necessary )
	A-v    scroll document down one page
	C-l    scroll current line to center, top, bottom in succession
	C-x >    scroll the view to the right
	C-x <    scroll the view to the left
	C-x ]    move to the next page break (^L)
	C-x [    move to the previous page break (^L)
	A-<    jump to start of document
	A->    jump to end of document
	A-gg   number    jump to any arbitrary line number

Practice scroll view up/down without using the Pg Up / Pg Dn keys

Practice scrolling current line to center, top or bottom of window

Practice scrolling the view to right and left 10, 20, 40 characters
        10         20       30         40       50         60       70         80       90        100       110
....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td><td>....i....</td></tr>

Practice

going

to

page

break

characters

back

and

forward.


Practice jumping to start and end of document use the register jump
command to return here.

Practice jumping to any line at all (10, 100, 500, 1000), note the
current line number so you can jump back here later.


4 ==========================================================================

Emacsercise #4 marking time.

Take note of the undo or revert buffer command to restore any changes you
might accidentally make.

	C-/    undo last change to buffer
	A-x revert-buffer    revert changes made to buffer
	C-g    keyboard quit to abort mark
	C-Space    place mark at current point
	A-@    mark text to the end of current / next / to the Nth word
	A-- A-@    mark text to the start of current / next word
	C-x C-x    exchange cursor point with mark position
	A-h    mark the current / next / to the Nth paragraph
	C-A-h    mark the current function
	C-x h    mark the entire buffer
	C-x C-p    mark the current page
	C-A-@    mark the symbolic expression


In this text here, practice extending the mark by word forward and backwards
and aborting the mark afterwards. See what happens when you exchange point
and mark then extend the mark to the next or previous word. Become fluent
with extending and de-extending the mark by a word at a time.  You can also
extend the selection a character at a time in either direction by normal
cursor movement and exchange point and mark.

Practice marking to start or end of line by starting a mark then moving
normally to start or end of line. Mark a whole line by moving to
start of line, start a mark then move to next or previous line

After clearing a mark you can show it again with exchange point and mark.

Scroll page back to previous exercises and practice marking paragraphs,
functions, symbolic expressions and pages. Use exchange point and mark
to see the boundaries of the mark when it extends outside the viewport.




5 ==========================================================================

Emacsercise #5 the killing fields.

Take note of the undo or revert buffer command to restore any changes you
make.

	C-/    undo last change to buffer
	A-x revert-buffer    revert changes made to buffer
	C-w    kill marked region
	A-z   char    kill forward to specific character
	C-Backspace    kill backward to start of word
	A-d    kill forward to end of word
	C-k    kill forward to end of line
	A-k    kill to end of sentence
	A--    change direction of next kill command

[TODO delete spaces around cursor, on line, etc. ace jump anywhere]

Work through the text below marking and killing only the capitalised text.
Try once using the mark commands from the last lesson before deleting. Then revert the buffer and try again with specific kill word, sentence and repeat parameter commands.

The unanimous KILL Declaration of KILL the thirteen united States of America,

When in the Course KILL KILL of human events, it becomes necessary for one
people to dissolve the KILL KILL KILL political bands which have connected
them with anoTHER, AND TO ASSUME AMONG THE POwers of the earth, the separate
and equal station to which the Laws of Nature and OF NATURE'S GOD ENTITLES
them, a decent respect to the opinions of mankind requires that they should
declare the causes which impel them to the separation.

We hold these truths to be self-evident, that all men are created equal,
that they are endowed by their Creator WITH CERTAIN UNALIENABLE RIGHTS, THAT
AMONG THESE ARE LIFE, LIBERTY AND THE PURSUIT OF HAPPINESS.  --That to
secure these rights, Governments are instituted among Men, deriving their
just powers from the consent of the governed, --That whenever any Form of
Government becomes destructive of these ends, it is the Right of the People
to alter or to abolish it, and to institute new Government, LAYING ITS
FOUNDATION ON SUCH PRINCIPLES AND ORGANIZING ITS POWERS IN SUCH FORM, AS TO
THEM SHALL SEEM MOST LIKELY TO EFFECT THEIR SAFETY AND HAPPINESS.

Prudence, indeed, WILL DICTATE THAT GOVERNMENTS long established should not
be changed for light and transient causes; and accordingly all experience
hath shewn, that mankind are more disposed to suffer, while evils are
sufferable, than to right themselves by abolishing the forms to which they
are accustomed.  But when a long train of abuses and usurpations, pursuing
invariably the same Object evinces a design to reduce them under absolute
Despotism, it is their right, it is their duty, to throw off such
Government, and to provide new Guards for their future security.

--SUCH HAS BEEN THE PATIENT SUFFERANCE OF THESE COLONIES; AND SUCH IS NOW
THE NECESSITY WHICH CONSTRAINS THEM TO ALTER THEIR FORMER SYSTEMS OF
GOVERNMENT.  THE HISTORY OF THE PRESENT KING OF GREAT BRITAIN IS A HISTORY
OF REPEATED INJURIES AND USURPATIONS, ALL HAVING IN DIRECT OBJECT THE
ESTABLISHMENT OF AN ABSOLUTE TYRANNY OVER THESE STATES.  TO PROVE THIS, LET
FACTS BE SUBMITTED TO A CANDID WORLD.




6 ==========================================================================

Emacsercise #6 hide and seek.

First save this cursor position to register 0 with C-x r Space 0
then you can return here with C-x r j 0

	 C-g	abort current search command
	 Backspace	undo effect of last character typed
	 Enter	exit incremental search
	 C-s	 incremental search forward (automatically matches many spaces)
	 C-r  incremental search backward
	 C-A-s	 incremental regex search forward
	 C-A-r  incremental regex search backward
	 A-p	select previous search string from history
	 A-n	select next search string from history

Do a regex search to match these:
if or else but not diff or kelsey   \b\(if\</td><td>else\)\b
"a quoted 'string' and the ending quote"   \(['"`]\).*\1
( whitespace )   (\s-*)
$var $ident $this $that   \$\w+
xx at start or end of line xx   ^xx xx$

function     	      (   )    { }
function (x, y)    { }
function ()    { return 42; }
function (x: int, y = 32) {}
function   
  ( ) {  }

Search solutions:
function\s-*([^)]*)\s-*{[^}]*}


7 ==========================================================================


Emacsercise #7 regexp builder.

First save this cursor position to register 0 with C-x r Space 0
then you can return here with C-x r j 0

	 A-x re-builder	interactive regex builder with highlighting
     C-c Tab	select syntax mode (read, string, sregex, lisp-re, rx) string is probably best
     C-c C-e	enter sub-expression mode to hightlight numbered match groups
     C-c C-c	toggle case sensitive mode
     C-c C-s	go forward to next match
     C-c C-r	go backward ot previous match
     C-c C-w	copy and covert regexp to an elisp expression

use regexp builder to construct a regexp and see what it matches immediately.

use \( \) groupings to see how numbered match groups get colored.

Sample regex:
\([use]+\) +\(regexp\) +builder.+


8 ==========================================================================


Emacsercise #8 A window onto the world.

First save this cursor position to register 0 with C-x r Space 0
then you can return here with C-x r j 0

	C-x 0	delete current window
	C-x 1	delete all other windows
	C-x 2	split windows opening one below
	C-x 3	split windows opening one to the right
	C-x o	move to the other window
	C-x }	widen the window
	C-x {	make window narrower
	C-x ^	make the window taller
	C-x +	balance the size of all windows
	A-v	scroll previous screen of buffer into view
	C-v	scroll next screen of buffer into view
	C-A-v	scroll next screen of other window info view
	A-Home	scroll other window to top of buffer
	A-End	scroll other window to bottom of buffer

 1. close all windows but one
 2. split window into two side by side panels
 3. make window wider or narrower by a specific number of columns
 4. jump to other window
 5. split that window into two above below panels
 6. make window taller by a specific number of rows
 7. jump to the other new window
 8. split that window into two side by side panels
 9. close the window
10. scroll current window up and down
11. scroll the other window to top of buffer
12. scroll the other window down a few times
13. scroll the other window to bottom of buffer
14. balance the size of all windows



. ==========================================================================

