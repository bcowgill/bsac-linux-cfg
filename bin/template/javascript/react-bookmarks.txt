Creating a new React App
https://github.com/reactjs/reactjs.org/pull/5487
create react app in limbo so suggest not to use it.
if a Single Page App use Parcel or Vite
	https://parceljs.org/recipes/web-extension/
if a Server Rendered App use Next.js or Remix
if a Static Website use Gatsby

NX https://dev.to/nx/react-vite-and-typescript-get-started-in-under-2-minutes-56f

Browsers
Capture Browser Screenshot (no extension needed)
https://swimburger.net/blog/web/hidden-gem-take-screenshots-using-built-in-commands-in-chrome-edge

Eslint
https://www.benmvp.com/blog/four-characters-optimize-react-component/
We recommend using the exhaustive-deps rule as part of our eslint-plugin-react-hooks package. It warns when dependencies are specified incorrectly and suggests a fix.

Crash Course in React UI testing with async code
https://kentcdodds.com/blog/testing-implementation-details
https://kentcdodds.com/blog/avoid-the-test-user
https://testing-library.com/docs/react-testing-library/cheatsheet
https://kentcdodds.com/blog/write-fewer-longer-tests
https://kentcdodds.com/blog/test-isolation-with-react
https://kentcdodds.com/blog/avoid-nesting-when-youre-testing
https://kentcdodds.com/blog/aha-testing
https://kentcdodds.com/blog/the-merits-of-mocking

Design
https://atomicdesign.bradfrost.com/chapter-2/

React
https://medium.com/javascript-in-plain-english/how-i-structure-react-apps-a76304277786
https://reactjs.org/docs/context.html
https://medium.com/cleverprogrammer/the-react-context-api-364da590aa73

Forms
https://reactjs.org/docs/forms.html
https://reactjs.org/docs/uncontrolled-components.html#the-file-input-tag
https://goshacmd.com/controlled-vs-uncontrolled-inputs-react/

React Hooks
https://www.robinwieruch.de/react-hooks-higher-order-components
https://www.benmvp.com/blog/four-characters-optimize-react-component/
https://reactjs.org/docs/hooks-intro.html
https://reactjs.org/docs/hooks-faq.html
https://reactjs.org/docs/hooks-overview.html
https://reactjs.org/docs/hooks-state.html
https://reactjs.org/docs/hooks-effect.html
https://reactjs.org/docs/hooks-rules.html
https://reactjs.org/docs/hooks-custom.html
https://reactjs.org/docs/hooks-reference.html#functional-updates

Redux with React Hooks
https://code-cartoons.com/a-cartoon-intro-to-redux-3afb775501a6
https://react-redux.js.org/next/api/hooks

✅ HAVE READ ^^^
https://joaoforja.com/blog/how-to-test-react-components-route-change/
https://www.npmjs.com/package/eslint-plugin-react-hooks#installation
QUEUE vvv
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Description
https://medium.com/@dan_abramov/making-sense-of-react-hooks-fdbde8803889
https://react-hooks-cheatsheet.com/
https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html
https://reactjs.org/docs/hooks-effect.html#tip-use-multiple-effects-to-separate-concerns
https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops
https://reactjs.org/docs/hooks-faq.html#how-does-react-associate-hook-calls-with-components
https://reactjs.org/docs/hooks-faq.html#how-to-memoize-calculations
https://reactjs.org/docs/testing-recipes.html
https://www.robinwieruch.de/react-hooks-fetch-data/
https://blog.isquaredsoftware.com/2019/07/blogged-answers-thoughts-on-hooks/
https://blog.isquaredsoftware.com/2019/09/presentation-hooks-hocs-tradeoffs/
https://github.com/testing-library/user-event

StoryBook
https://storybook.js.org/docs/react/get-started/introduction

Cypress Crash Course
https://www.cypress.io/features
https://docs.cypress.io/guides/getting-started/writing-your-first-test#Add-a-test-file
https://example.cypress.io/cypress-api
https://example.cypress.io/commands/assertions#should


If you want to learn more about the Bash shell (command line and scripting) you should start with some basic tutorials, then focus on some of the shortcuts (key commands, history, aliases) so you don’t have to type so much on the command line then get to know the most useful commands that are available (grep, find, xargs, vim, head, tail, etc)

For Perl, the book Learning Perl is the best but you might want to start with another basic tutorial, then focus on the power of perl oneliners.  You can do some very powerful transformations of files on a single line of perl.
Then start to “use English” so that you don’t have to use variables named $% $_ $@ etc you can say $FORMAT_PAGE_NUMBER, $ARG or $EVAL_ERROR instead.  Get good at perl’s regular expressions to really get benefits out of it.

Shell Script Knowledge Path
Tutorials https://www.shellscript.sh/
https://www.educba.com/software-development/software-development-tutorials/shell-scripting-tutorial/
http://docs.linuxtone.org/ebooks/Shell/Linux%20Shell%20Scripting%20Tutorial%20v2.0.pdf
Bash shortcuts https://www.shell-tips.com/bash/shortcuts/
Commands
https://www.howtoforge.com/tutorial/linux-find-command/
https://www.howtogeek.com/412055/37-important-linux-commands-you-should-know/
Mastering Bash https://www.shell-tips.com/bash/

Perl Knowledge Path
Tutorials https://perldoc.perl.org/perl#Tutorials
https://www.perltutorial.org/
Oneliners https://learnbyexample.github.io/learn_perl_oneliners/one-liner-introduction.html
use English https://perldoc.perl.org/perlvar
Regex https://perldoc.perl.org/perlrequick
Learning Perl http://tiramisutes.github.io/images/PDF/Learning%20Perl%206th%20Edition.pdf
